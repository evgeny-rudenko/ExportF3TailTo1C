SET NOCOUNT ON
SET QUOTED_IDENTIFIER OFF
GO

IF OBJECT_ID('DBO.USP_EXPORT_1C_NB') IS NULL BEGIN
    EXEC('CREATE PROCEDURE DBO.USP_EXPORT_1C_NB AS RETURN')
    GRANT EXEC ON [DBO].USP_EXPORT_1C_NB TO [PUBLIC]
END
GO
---------------------------------------------------------------------------------------------------
ALTER PROCEDURE DBO.USP_EXPORT_1C_NB @XMLPARAM NTEXT
WITH RECOMPILE
AS 



DECLARE @HDOC INT, @DATE_FROM DATETIME, @DATE_TO DATETIME
DECLARE @PDATEBL DATETIME, @PDATEEL DATETIME
DECLARE @ALL_STORE BIT, @ALL_DOC BIT, @ALL_CONTRACTOR BIT
DECLARE @CODE_NAME_UNIT_GROUPS BIT
DECLARE @CASH_SESSION_MOVE BIT

EXEC SP_XML_PREPAREDOCUMENT @HDOC OUTPUT , @XMLPARAM OUTPUT
    SELECT TOP 1
        @DATE_FROM = DATE_FROM ,
        @DATE_TO = DATE_TO,
		@CODE_NAME_UNIT_GROUPS = CODE_NAME_UNIT_GROUPS

    FROM OPENXML(@HDOC, '/XML') 
	WITH(
        DATE_FROM DATETIME 'DATE_FROM',
        DATE_TO DATETIME 'DATE_TO',
		CODE_NAME_UNIT_GROUPS BIT 'CODE_NAME_UNIT_GROUPS')

    SELECT ID_STORE INTO #STORE FROM OPENXML(@HDOC, '/XML/STORE') WITH(
        ID_STORE BIGINT 'ID_STORE') WHERE ID_STORE != 0
    IF @@ROWCOUNT = 0 SET @ALL_STORE = 1 ELSE SET @ALL_STORE = 0
    
    SELECT ID_TABLE_DATA INTO #TABLE_DATA FROM OPENXML(@HDOC, '/XML/TABLE_DATA') WITH(
        ID_TABLE_DATA BIGINT 'ID_TABLE_DATA') WHERE ID_TABLE_DATA != 0
    IF @@ROWCOUNT = 0 SET @ALL_DOC = 1 ELSE SET @ALL_DOC = 0

    SELECT ID_CONTRACTOR INTO #CONTRACTOR FROM OPENXML(@HDOC, '/XML/CONTRACTOR') WITH(
        ID_CONTRACTOR BIGINT 'ID_CONTRACTOR') WHERE ID_CONTRACTOR != 0
    IF @@ROWCOUNT = 0 SET @ALL_CONTRACTOR = 1 ELSE SET @ALL_CONTRACTOR = 0




		--,@CODE_NAME_UNIT_GROUPS BIT
EXEC SP_XML_REMOVEDOCUMENT @HDOC

EXEC USP_RANGE_NORM @DATE_FROM OUT, @DATE_TO OUT
EXEC USP_RANGE_DAYS @DATE_FROM OUT, @DATE_TO OUT

SET @PDATEBL = CONVERT(DATETIME, CONVERT(VARCHAR, @DATE_FROM, 104), 104)
SET @PDATEEL = CONVERT(DATETIME, CONVERT(VARCHAR, @DATE_TO, 104), 104)

declare @ID_STORE_TYPE_PRODUCED_OPTICS uniqueidentifier
select @ID_STORE_TYPE_PRODUCED_OPTICS = ID_STORE_TYPE_GLOBAL
from STORE_TYPE
where
	MNEMOCODE = 'OPTIKAGP'

DECLARE @STRUCTURE TABLE(COL_ID INT, TABLE_NAME NVARCHAR(128), COLUMN_NAME NVARCHAR(128), [TYPE_NAME] NVARCHAR(128), [PRECISION] INT, LENGTH INT, SCALE INT)
INSERT @STRUCTURE(
TABLE_NAME,		COL_ID, COLUMN_NAME,		[TYPE_NAME],	[PRECISION], [LENGTH], SCALE)
SELECT 'TO',	01,     'OPER_CODE',		'varchar',		032,         032,      00 UNION ALL
SELECT 'TO',	02,     'DOC_ID',			'varchar',		050,         050,      00 UNION ALL
SELECT 'TO',    03,     'DOC_NUM',			'varchar',		050,         050,      00 UNION ALL
SELECT 'TO',    04,     'DOC_DATE',			'varchar',		019,         019,      00 UNION ALL
SELECT 'TO',    05,     'AU_CODE',			'varchar',		040,         040,      00 UNION ALL
SELECT 'TO',    06,     'AU_NAME',			'varchar',		200,         200,      00 UNION ALL
SELECT 'TO',    07,     'AU_TO_CODE',		'varchar',		040,         040,      00 UNION ALL
SELECT 'TO',    08,     'AU_TO_NAME',		'varchar',		200,         200,      00 UNION ALL
SELECT 'TO',    09,     'STORE_ID',			'varchar',		040,         040,      00 UNION ALL
SELECT 'TO',    10,     'STORE_NM',			'varchar',		100,         100,      00 UNION ALL
SELECT 'TO',    11,     'STORE_TO_I',		'varchar',		040,         040,      00 UNION ALL
SELECT 'TO',    12,     'STORE_TO_N',		'varchar',		100,         100,      00 UNION ALL
SELECT 'TO',    13,     'CONTR_ID',			'varchar',		040,         040,      00 UNION ALL
SELECT 'TO',    14,     'CONTR_NM',			'varchar',		200,         200,      00 UNION ALL
SELECT 'TO',    15,     'CONTR_INN',		'varchar',		040,         040,      00 UNION ALL
SELECT 'TO',    16,     'CONTR_KPP',		'varchar',		010,         010,      00 UNION ALL
SELECT 'TO',    17,     'CON_CODE',			'varchar',		100,         100,      00 UNION ALL
SELECT 'TO',    18,     'CON_NAME',			'varchar',		150,         150,      00 UNION ALL
SELECT 'TO',    19,     'PROC',				'int',			001,         001,      00 UNION ALL
SELECT 'TO',    20,     'DEL',				'int',			001,         001,      00 UNION ALL
SELECT 'TO',    21,     'COMMENT',			'varchar',		254,         254,      00 UNION ALL
SELECT 'TO',    22,     'DOC_INNUM',		'varchar',		040,         040,      00 UNION ALL
SELECT 'TO',    23,     'DOC_IN_DAT',		'varchar',		019,         019,      00 UNION ALL
SELECT 'TO',    24,     'TYPE_PAY',			'varchar',		005,         005,      00 UNION ALL
SELECT 'TO',    25,     'DED_TYPE_ID',		'varchar',		040,         040,      00 UNION ALL
SELECT 'TO',    26,     'DED_TYPE_NM',		'varchar',		050,         050,      00 UNION ALL
SELECT 'TO',    27,     'BASE_DOC_ID',		'varchar',		050,         050,      00 UNION ALL
SELECT 'TO',    28,     'BASE_DOC_NUM',     'varchar',		050,         050,      00 UNION ALL
SELECT 'TO',    29,     'BASE_DOC_DATE',    'varchar',		019,         019,      00 UNION ALL
SELECT 'TO',    30,     'CORRECT_SF_TYPE',	'int',			001,         001,      00 UNION ALL
SELECT 'TO',	31,		'QUANTITY',			'money',		015,		 015,	   02 UNION ALL
SELECT 'TO',    32,     'NDS_RATE',			'money',		006,         006,      02 UNION ALL
SELECT 'TO',    33,     'NDS_RATE_R',		'money',		006,         006,      02 UNION ALL
SELECT 'TO',    34,     'OPT_YNDS',			'money',		015,         015,      02 UNION ALL
SELECT 'TO',    35,     'OPT_NDS',			'money',		015,         015,      02 UNION ALL
SELECT 'TO',    36,     'RET_YNDS',			'money',		015,         015,      02 UNION ALL
SELECT 'TO',    37,     'RET_NDS',			'money',		015,         015,      02 UNION ALL
SELECT 'TO',    38,     'RET_DISC',			'money',		015,         015,      02 UNION ALL
SELECT 'TO',    39,     'EMP_CLOS',			'varchar',		100,         100,      00 UNION ALL
SELECT 'TO',    40,     'BILL_NUM',			'varchar',		050,         050,      00 UNION ALL
SELECT 'TO',    41,     'BILL_DT',			'varchar',		019,         019,      00 UNION ALL
SELECT 'TO',    42,     'GC_CONTR_ID',		'varchar',		040,         040,      00 UNION ALL
SELECT 'TO',    43,     'GC_CONTR',			'varchar',		200,         200,      00 UNION ALL
SELECT 'TO',    44,     'GC_NUMBER',		'varchar',		100,         100,      00 UNION ALL
SELECT 'TO',    45,     'GC_DATE',			'varchar',		010,         010,      00 UNION ALL
SELECT 'TO',    46,     'GC_SRV_NUMBER',	'varchar',		070,         070,      00 UNION ALL
SELECT 'TO',    47,     'GC_SRV_DATE',		'varchar',		010,         010,      00 UNION ALL
SELECT 'TO',    48,     'SUP_USEVAT',		'int',			001,         001,      00 UNION ALL
SELECT 'TO',    47,     'GOODS_CODE',		'varchar',		040,         040,      00 UNION ALL
SELECT 'TO',    47,     'GOODS_NAME',		'varchar',		254,         254,      00 

DECLARE @RESULT_TAB		TABLE(
    OPER_CODE			VARCHAR(32), 
    DOC_ID				VARCHAR(50),
    DOC_NUM				VARCHAR(50), 
    DOC_DATE			DATETIME, 
    AU_CODE				VARCHAR(40),
    AU_NAME				VARCHAR(200),
    AU_TO_CODE			VARCHAR(40),
    AU_TO_NAME			VARCHAR(200),
    STORE_ID			VARCHAR(40), 
    STORE_NM			VARCHAR(100),
    STORE_TO_I			VARCHAR(40), 
    STORE_TO_N			VARCHAR(100),
    CONTR_ID			VARCHAR(40),
    CONTR_NM			VARCHAR(200), 
    CONTR_INN			VARCHAR(40),
    CONTR_KPP			VARCHAR(10),
    CON_CODE			VARCHAR(100),
    CON_NAME			VARCHAR(150),
    [PROC]				INT,
    [DEL]				INT,
    COMMENT				VARCHAR(254),
    DOC_INNUM			VARCHAR(40), 
    DOC_IN_DAT			DATETIME,
    TYPE_PAY			VARCHAR(5), 
    DED_TYPE_ID			VARCHAR(40), 
    DED_TYPE_NM			VARCHAR(50), 
    BASE_DOC_ID			VARCHAR(50), 
    BASE_DOC_NUM		VARCHAR(50), 
    BASE_DOC_DATE		DATETIME,
    CORRECT_SF_TYPE		INT,
    QUANTITY			DECIMAL(18, 2),
    NDS_RATE			DECIMAL(18,2), 
    NDS_RATE_R			DECIMAL(18, 2),
    OPT_YNDS			DECIMAL(18, 2), 
    OPT_NDS				DECIMAL(18, 2),
    RET_YNDS			DECIMAL(18, 2), 
    RET_NDS				DECIMAL(18, 2),
    RET_DISC			DECIMAL(18, 2),
	EMP_CLOS			VARCHAR(100),
	BILL_NUM			VARCHAR(50),
	BILL_DT				DATETIME,
	GC_CONTR_ID			varchar(200),
	GC_CONTR			varchar(200),
	GC_NUMBER			varchar(100),
	GC_DATE				DateTime,
	GC_SRV_NUMBER		varchar(70),
	GC_SRV_DATE			DateTime,
	SUP_USEVAT			INT,

	GOODS_CODE			varchar(40),
    GOODS_NAME			varchar(254)
)



---------------------------------------------------------------------------------------------------
IF OBJECT_ID('TEMPDB..#DIST_CONTRACTOR_2_CONTRACTOR_GROUP') IS NOT NULL DROP TABLE #DIST_CONTRACTOR_2_CONTRACTOR_GROUP
---------------------------------------------------------------------------------------------------
;WITH cteC2CG AS
(
    SELECT
        N = ROW_NUMBER()OVER
            (
                PARTITION BY C2CG.ID_CONTRACTOR, C2CG.ID_CONTRACTOR_GROUP
                ORDER BY CASE WHEN  C2CG.DATE_DELETED IS NULL THEN 1 ELSE 2 END, C2CG.DATE_DELETED DESC, C2CG.ID_CONTRACTOR_2_CONTRACTOR_GROUP
            ),
        C2CG.ID_CONTRACTOR,
        C2CG.ID_CONTRACTOR_GROUP
        FROM
            CONTRACTOR_2_CONTRACTOR_GROUP C2CG
            INNER JOIN CONTRACTOR C ON C.ID_CONTRACTOR = C2CG.ID_CONTRACTOR
            INNER JOIN CONTRACTOR_GROUP CG ON CG.ID_CONTRACTOR_GROUP = C2CG.ID_CONTRACTOR_GROUP
        WHERE
            C2CG.DATE_DELETED IS NULL
)
SELECT *
    INTO #DIST_CONTRACTOR_2_CONTRACTOR_GROUP
    FROM cteC2CG
    WHERE N = 1


DECLARE @INDEX VARCHAR(36)
SET @INDEX = REPLACE(CAST(NEWID() AS VARCHAR(40)), '-', '')
EXEC('CREATE INDEX IX_#DIST_CONTRACTOR_2_CONTRACTOR_GROUP_' + @INDEX + '$ID_CONTRACTOR ON #DIST_CONTRACTOR_2_CONTRACTOR_GROUP(ID_CONTRACTOR)')
EXEC('CREATE INDEX IX_#DIST_CONTRACTOR_2_CONTRACTOR_GROUP_' + @INDEX + '$ID_CONTRACTOR_GROUP ON #DIST_CONTRACTOR_2_CONTRACTOR_GROUP(ID_CONTRACTOR_GROUP)')


-------------------------------------------------------------------------------------------
-- œ–»’ŒƒÕ¿ﬂ Õ¿ À¿ƒÕ¿ﬂ
-------------------------------------------------------------------------------------------
IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 2))
INSERT INTO @RESULT_TAB
SELECT 
    OPER_CODE		= 'INVOICE', 
    DOC_ID			= CAST(I.ID_INVOICE_GLOBAL AS VARCHAR(50)), 
    DOC_NUM			= CAST(I.MNEMOCODE AS VARCHAR(50)),
    DOC_DATE		= CAST(I.DOCUMENT_DATE AS DATETIME), 
    AU_CODE			= CAST(AU.CODE AS VARCHAR(40)),
    AU_NAME			= CAST(AU.NAME AS VARCHAR(200)),
    AU_TO_CODE		= CAST(NULL AS VARCHAR(40)),	
    AU_TO_NAME		= CAST(NULL AS VARCHAR(200)),	
    STORE_ID		= CAST(S.ID_STORE_GLOBAL AS VARCHAR(40)), 
    STORE_NM		= CAST(S.NAME AS VARCHAR(100)),
    STORE_TO_I		= CAST(NULL AS VARCHAR(40)), 
    STORE_TO_N		= CAST(NULL AS VARCHAR(100)),
    --CONTR_ID		= CAST(SUP.CODE AS VARCHAR(40)), 
	CONTR_ID		= CAST(SUP.ID_CONTRACTOR_GLOBAL AS VARCHAR(40)), 
    CONTR_NM		= CAST(SUP.NAME AS VARCHAR(200)),
    CONTR_INN		= CAST(SUP.INN AS VARCHAR(40)),
    CONTR_KPP		= CAST(SUP.KPP AS VARCHAR(10)),
    CON_CODE		= CAST(CON.CONTRACTOR_CODE AS VARCHAR(100)),
    CON_NAME		= CAST(CON.NAME AS VARCHAR(150)),
    [PROC]			= CASE I.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    DEL				= CASE I.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    COMMENT			= CAST(ISNULL(I.COMMENT,'') AS VARCHAR(254)),
    DOC_INNUM		= CAST(I.INCOMING_NUMBER AS VARCHAR(40)), 
    DOC_IN_DAT		= CAST(I.INCOMING_DATE AS DATETIME),
    TYPE_PAY		= CAST(NULL AS VARCHAR(5)), 
    DED_TYPE_ID		= CAST(NULL AS VARCHAR(40)), 
    DED_TYPE_NM		= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_ID		= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_NUM	= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_DATE	= CAST(NULL AS DATETIME),
    CORRECT_SF_TYPE	= CAST(NULL AS INT),
	QUANTITY		= CAST(SUM(II.QUANTITY) AS DECIMAL(18, 2)),
    NDS_RATE		= CAST(II.SUPPLIER_VAT AS DECIMAL(18, 2)),
    NDS_RATE_R		= CAST(II.RETAIL_VAT AS DECIMAL(18, 2)),
    OPT_YNDS		= CAST(SUM(LM.SUM_SUP + II.QUANTITY * case when S.ID_STORE_TYPE_GLOBAL = @ID_STORE_TYPE_PRODUCED_OPTICS then l.PRICE_PROD else 0.0 end) AS DECIMAL(18, 2)), 
    OPT_NDS			= CAST(SUM(LM.SVAT_SUP) AS DECIMAL(18, 2)),
    RET_YNDS		= CAST(SUM(LM.SUM_ACC) AS DECIMAL(18, 2)), 
    RET_NDS			= CAST(SUM(LM.SVAT_ACC) AS DECIMAL(18, 2)),
    RET_DISC		= CAST(NULL AS DECIMAL(18, 2)),
	EMP_CLOS		= CAST(NULL AS VARCHAR(100)),
	BILL_NUM		= CAST(I.INCOMING_BILL_NUMBER AS VARCHAR(50)),
	BILL_DT			= CAST(I.INCOMING_BILL_DATE AS DATETIME),
	GC_CONTR_ID		= cast(gcc.CODE as varchar(40)),
	GC_CONTR		= cast(gcc.NAME as varchar(200)),
	GC_NUMBER		= cast(gc.CODE as varchar(100)),
	GC_DATE			= cast(gc.DATE as DateTime),
	GC_SRV_NUMBER	= cast(NULL/*gcs.NUMBER*/ as varchar(70)),
	GC_SRV_DATE		= cast(NULL/*gcs.DATE_BEGIN*/ as DateTime),
	SUP_USEVAT		= cast(SUP.USE_VAT as int),
	GOODS_CODE = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    GOODS_NAME = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(254))


FROM INVOICE_ITEM						II	(NOLOCK)
JOIN INVOICE							I	(NOLOCK) ON I.ID_INVOICE_GLOBAL = II.ID_INVOICE_GLOBAL
JOIN LOT_MOVEMENT						LM	(NOLOCK) ON LM.ID_DOCUMENT = I.ID_INVOICE_GLOBAL and LM.ID_DOCUMENT_ITEM = II.ID_INVOICE_ITEM_GLOBAL
JOIN LOT								L	(NOLOCK) on L.ID_LOT_GLOBAL = LM.ID_LOT_GLOBAL
JOIN STORE								S	(NOLOCK) ON S.ID_STORE = I.ID_STORE
JOIN CONTRACTOR							AU	(NOLOCK) ON AU.ID_CONTRACTOR = S.ID_CONTRACTOR
JOIN CONTRACTOR							SUP	(NOLOCK) ON SUP.ID_CONTRACTOR = I.ID_CONTRACTOR_SUPPLIER
LEFT JOIN CONTRACTS						CON	(NOLOCK) on CON.ID_CONTRACTS_GLOBAL = I.ID_CONTRACTS_GLOBAL
left join GOS_CONTRACT					gc	(NOLOCK) on GC.ID_GOS_CONTRACT = I.ID_GOS_CONTRACT
--left join GOS_CONTRACT_GOODS_2_SERVICE	g2s	(NOLOCK) on G2S.ID_GOS_CONTRACT_GOODS_GLOBAL = L.ID_GOS_CONTRACT_GOODS
--left join GOS_CONTRACT_SERVICE			gcs	(NOLOCK) on g2s.ID_GOS_CONTRACT_SERVICE_GLOBAL = gcs.ID_GOS_CONTRACT_SERVICE_GLOBAL
left join CONTRACTOR					gcc	(NOLOCK) on gc.ID_CONTRACTOR = GCC.ID_CONTRACTOR
INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
WHERE 
    I.DOCUMENT_DATE BETWEEN @DATE_FROM AND @DATE_TO
    AND (@ALL_STORE = 1 OR S.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP))
    AND (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 2))
    AND (@ALL_CONTRACTOR = 1 OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = S.ID_CONTRACTOR))
GROUP BY 
    CAST(I.ID_INVOICE_GLOBAL AS VARCHAR(50)), 
    CAST(I.MNEMOCODE AS VARCHAR(50)),
    CAST(I.DOCUMENT_DATE AS DATETIME), 
    CAST(AU.CODE AS VARCHAR(40)),
    CAST(AU.NAME AS VARCHAR(200)),	
    CAST(S.ID_STORE_GLOBAL AS VARCHAR(40)), 
    CAST(S.NAME AS VARCHAR(100)),
    CAST(SUP.ID_CONTRACTOR_GLOBAL AS VARCHAR(40)), 
    CAST(SUP.NAME AS VARCHAR(200)),
    CAST(SUP.INN AS VARCHAR(40)),
    CAST(SUP.KPP AS VARCHAR(10)),
    CAST(CON.CONTRACTOR_CODE AS VARCHAR(100)),
    CAST(CON.NAME AS VARCHAR(150)),
    CASE I.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    CASE I.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    CAST(ISNULL(I.COMMENT,'') AS VARCHAR(254)),
    CAST(I.INCOMING_NUMBER AS VARCHAR(40)), 
    CAST(I.INCOMING_DATE AS DATETIME),
    CAST(II.SUPPLIER_VAT AS DECIMAL(18, 2)),
    CAST(II.RETAIL_VAT AS DECIMAL(18, 2)),
	CAST(I.INCOMING_BILL_NUMBER AS VARCHAR(50)),
	CAST(I.INCOMING_BILL_DATE AS DATETIME),
	cast(gcc.CODE as varchar(40)),
	cast(gcc.NAME as varchar(200)),
	cast(gc.CODE as varchar(100)),
	cast(gc.DATE as DateTime),
--	cast(gcs.NUMBER as varchar(70)),
--	cast(gcs.DATE_BEGIN as DateTime),
	cast(SUP.USE_VAT as int),
	CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(256))

	
-------------------------------------------------------------------------------------------
-- ¿ “ œ–≈“≈Õ«»» œŒ œ–»’ŒƒÕŒ… Õ¿ À¿ƒÕŒ…
-------------------------------------------------------------------------------------------
IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 2))
INSERT INTO @RESULT_TAB
SELECT 
    OPER_CODE =			'ACT_PRETENSION', 
    DOC_ID =			CAST(I.ID_INVOICE_GLOBAL AS VARCHAR(50)), 
    DOC_NUM =			CAST(REPLACE(I.MNEMOCODE,'œÕ','¿œ') AS VARCHAR(50)),
    DOC_DATE =			CAST(I.DOCUMENT_DATE AS DATETIME), 
    AU_CODE =			CAST(AU.CODE AS VARCHAR(40)),
    AU_NAME =			CAST(AU.NAME AS VARCHAR(200)),
    AU_TO_CODE =		CAST(NULL AS VARCHAR(40)),	
    AU_TO_NAME =		CAST(NULL AS VARCHAR(200)),	
    STORE_ID =			CAST(S.ID_STORE_GLOBAL AS VARCHAR(40)), 
    STORE_NM =			CAST(S.NAME AS VARCHAR(100)),
    STORE_TO_I =		CAST(NULL AS VARCHAR(40)), 
    STORE_TO_N =		CAST(NULL AS VARCHAR(100)),
    CONTR_ID =			CAST(SUP.CODE AS VARCHAR(40)), 
    CONTR_NM =			CAST(SUP.NAME AS VARCHAR(200)),
    CONTR_INN =			CAST(SUP.INN AS VARCHAR(40)),
    CONTR_KPP =			CAST(SUP.KPP AS VARCHAR(10)),
    CON_CODE =			CAST(CON.CONTRACTOR_CODE AS VARCHAR(100)),
    CON_NAME =			CAST(CON.NAME AS VARCHAR(150)),
    [PROC] =			CASE I.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    DEL =				CASE I.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    COMMENT =			CAST(ISNULL(I.COMMENT,'') AS VARCHAR(254)),
    DOC_INNUM =			CAST(I.INCOMING_NUMBER AS VARCHAR(40)), 
    DOC_IN_DAT =		CAST(I.INCOMING_DATE AS DATETIME),
    TYPE_PAY =			CAST(NULL AS VARCHAR(5)), 
    DED_TYPE_ID =		CAST(NULL AS VARCHAR(40)), 
    DED_TYPE_NM =		CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_ID =		CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_NUM =		CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_DATE =		CAST(NULL AS DATETIME),
    CORRECT_SF_TYPE =	CAST(NULL AS INT),
	QUANTITY =			CAST(SUM(II.BREAKAGE_QTY + II.WASTE_QTY + II.SHORTFALL_QTY) AS DECIMAL(18, 2)),
    NDS_RATE =			CAST(II.SUPPLIER_VAT AS DECIMAL(18, 2)),
    NDS_RATE_R =		CAST(II.RETAIL_VAT AS DECIMAL(18, 2)),
    OPT_YNDS =			CAST(SUM(L.PRICE_SUP * (II.BREAKAGE_QTY + II.WASTE_QTY + II.SHORTFALL_QTY) + case when S.ID_STORE_TYPE_GLOBAL = @ID_STORE_TYPE_PRODUCED_OPTICS then l.PRICE_PROD else 0.0 end) AS DECIMAL(18, 2)), 
    OPT_NDS =			CAST(SUM(L.PVAT_SUP * (II.BREAKAGE_QTY + II.WASTE_QTY + II.SHORTFALL_QTY)) AS DECIMAL(18, 2)),
    RET_YNDS =			CAST(SUM(L.PRICE_SAL * (II.BREAKAGE_QTY + II.WASTE_QTY + II.SHORTFALL_QTY)) AS DECIMAL(18, 2)), 
    RET_NDS =			CAST(SUM(L.PVAT_SAL * (II.BREAKAGE_QTY + II.WASTE_QTY + II.SHORTFALL_QTY)) AS DECIMAL(18, 2)),
    RET_DISC =			CAST(NULL AS DECIMAL(18, 2)),
	EMP_CLOS =			CAST(NULL AS VARCHAR(100)),
	BILL_NUM =			CAST(I.INCOMING_BILL_NUMBER AS VARCHAR(50)),
	BILL_DT =			CAST(I.INCOMING_BILL_DATE AS DATETIME),
	GC_CONTR_ID =		cast(gcc.CODE as varchar(40)),
	GC_CONTR =			cast(gcc.NAME as varchar(200)),
	GC_NUMBER =			cast(gc.CODE as varchar(100)),
	GC_DATE =			cast(gc.DATE as DateTime),
	GC_SRV_NUMBER =		cast(NULL/*gcs.NUMBER*/ as varchar(70)),
	GC_SRV_DATE =		cast(NULL/*gcs.DATE_BEGIN*/ as DateTime),
	SUP_USEVAT =		cast(SUP.USE_VAT as int),
	GOODS_CODE = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    GOODS_NAME = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(254))
   

FROM INVOICE_ITEM						II	(NOLOCK)
JOIN INVOICE							I	(NOLOCK) ON I.ID_INVOICE_GLOBAL = II.ID_INVOICE_GLOBAL
JOIN LOT								L	(NOLOCK) ON L.ID_DOCUMENT = I.ID_INVOICE_GLOBAL and L.ID_DOCUMENT_ITEM = II.ID_INVOICE_ITEM_GLOBAL
JOIN STORE								S	(NOLOCK) ON S.ID_STORE = I.ID_STORE    
JOIN CONTRACTOR							AU	(NOLOCK) ON AU.ID_CONTRACTOR = S.ID_CONTRACTOR
JOIN CONTRACTOR							SUP	(NOLOCK) ON SUP.ID_CONTRACTOR = I.ID_CONTRACTOR_SUPPLIER
LEFT JOIN CONTRACTS						CON	(NOLOCK) on CON.ID_CONTRACTS_GLOBAL = I.ID_CONTRACTS_GLOBAL
left join GOS_CONTRACT					gc	(NOLOCK) on GC.ID_GOS_CONTRACT = I.ID_GOS_CONTRACT
--left join GOS_CONTRACT_GOODS_2_SERVICE	g2s	(NOLOCK) on G2S.ID_GOS_CONTRACT_GOODS_GLOBAL = L.ID_GOS_CONTRACT_GOODS
--left join GOS_CONTRACT_SERVICE			gcs	(NOLOCK) on g2s.ID_GOS_CONTRACT_SERVICE_GLOBAL = gcs.ID_GOS_CONTRACT_SERVICE_GLOBAL
left join CONTRACTOR					gcc	(NOLOCK) on gc.ID_CONTRACTOR = GCC.ID_CONTRACTOR
INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS

WHERE 
    I.DOCUMENT_DATE BETWEEN @DATE_FROM AND @DATE_TO
    AND (@ALL_STORE = 1 OR S.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP))
    AND (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 2))
    AND (@ALL_CONTRACTOR = 1 OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = S.ID_CONTRACTOR))
    AND II.BREAKAGE_QTY + II.WASTE_QTY + II.SHORTFALL_QTY > 0
GROUP BY 
    CAST(I.ID_INVOICE_GLOBAL AS VARCHAR(50)), 
    CAST(REPLACE(I.MNEMOCODE,'œÕ','¿œ') AS VARCHAR(50)),
    CAST(I.DOCUMENT_DATE AS DATETIME), 
    CAST(AU.CODE AS VARCHAR(40)),
    CAST(AU.NAME AS VARCHAR(200)),	
    CAST(S.ID_STORE_GLOBAL AS VARCHAR(40)), 
    CAST(S.NAME AS VARCHAR(100)),
    CAST(SUP.CODE AS VARCHAR(40)), 
    CAST(SUP.NAME AS VARCHAR(200)),
    CAST(SUP.INN AS VARCHAR(40)),
    CAST(SUP.KPP AS VARCHAR(10)),
    CAST(CON.CONTRACTOR_CODE AS VARCHAR(100)),
    CAST(CON.NAME AS VARCHAR(150)),
    CASE I.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    CASE I.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    CAST(ISNULL(I.COMMENT,'') AS VARCHAR(254)),
    CAST(I.INCOMING_NUMBER AS VARCHAR(40)), 
    CAST(I.INCOMING_DATE AS DATETIME),
    CAST(II.SUPPLIER_VAT AS DECIMAL(18, 2)),
    CAST(II.RETAIL_VAT AS DECIMAL(18, 2)),
	CAST(I.INCOMING_BILL_NUMBER AS VARCHAR(50)),
	CAST(I.INCOMING_BILL_DATE AS DATETIME),
	cast(gcc.CODE as varchar(40)),
	cast(gcc.NAME as varchar(200)),
	cast(gc.CODE as varchar(100)),
	cast(gc.DATE as DateTime),
--	cast(gcs.NUMBER as varchar(70)),
--	cast(gcs.DATE_BEGIN as DateTime),
	cast(SUP.USE_VAT as int),
	CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(256))
    
	
-- -------------------------------------------------------------------------------------------
-- -- ¿ “ ¬Œ«¬–¿“¿ œŒ—“¿¬Ÿ» ”
-- -------------------------------------------------------------------------------------------
IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 3))
INSERT INTO @RESULT_TAB
SELECT
    OPER_CODE =			'ACT_RETURN_TO_CONTRACTOR', 
    DOC_ID =			CAST(AC.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL AS VARCHAR(50)), 
    DOC_NUM =			CAST(AC.MNEMOCODE AS VARCHAR(50)),
    DOC_DATE =			CAST(AC.DATE AS DATETIME), 
    AU_CODE =			CAST(AU.CODE AS VARCHAR(40)),
    AU_NAME =			CAST(AU.NAME AS VARCHAR(200)),
    AU_TO_CODE =		CAST(NULL AS VARCHAR(40)),	
    AU_TO_NAME =		CAST(NULL AS VARCHAR(200)),	
    STORE_ID =			CAST(S.ID_STORE_GLOBAL AS VARCHAR(40)), 
    STORE_NM =			CAST(S.NAME AS VARCHAR(100)),
    STORE_TO_I =		CAST(NULL AS VARCHAR(40)), 
    STORE_TO_N =		CAST(NULL AS VARCHAR(100)),
    CONTR_ID =			CAST(SUP.CODE AS VARCHAR(40)), 
    CONTR_NM =			CAST(SUP.NAME AS VARCHAR(200)),
    CONTR_INN =			CAST(SUP.INN AS VARCHAR(40)),
    CONTR_KPP =			CAST(SUP.KPP AS VARCHAR(10)),
    CON_CODE =			CAST(CON.CONTRACTOR_CODE AS VARCHAR(100)),
    CON_NAME =			CAST(CON.NAME AS VARCHAR(150)),
    [PROC] =			CASE AC.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    DEL =				CASE AC.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    COMMENT =			CAST(ISNULL(AC.COMMENT,'') AS VARCHAR(254)),
    DOC_INNUM =			CAST(NULL AS VARCHAR(40)), 
    DOC_IN_DAT =		CAST(NULL AS DATETIME),
    TYPE_PAY =			CAST(NULL AS VARCHAR(5)), 
    DED_TYPE_ID =		CAST(NULL AS VARCHAR(40)), 
    DED_TYPE_NM =		CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_ID =		CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_NUM =		CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_DATE =		CAST(NULL AS DATETIME),
    CORRECT_SF_TYPE =	CAST(NULL AS INT),
	QUANTITY =			CAST(SUM(ACI.QUANTITY) AS DECIMAL(18, 2)),
    NDS_RATE =			CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    NDS_RATE_R =		CAST(L.VAT_SAL AS DECIMAL(18, 2)),
    OPT_YNDS =			CAST(SUM(L.PRICE_SUP * ACI.QUANTITY + case when S.ID_STORE_TYPE_GLOBAL = @ID_STORE_TYPE_PRODUCED_OPTICS then l.PRICE_PROD else 0.0 end) AS DECIMAL(18, 2)), 
    OPT_NDS =			CAST(SUM(L.PVAT_SUP * ACI.QUANTITY) AS DECIMAL(18, 2)),
    RET_YNDS =			CAST(SUM(L.PRICE_SAL * ACI.QUANTITY) AS DECIMAL(18, 2)), 
    RET_NDS =			CAST(SUM(L.PVAT_SAL * ACI.QUANTITY) AS DECIMAL(18, 2)),
    RET_DISC =			CAST(NULL AS DECIMAL(18, 2)),
	EMP_CLOS =			CAST(NULL AS VARCHAR(100)),
	BILL_NUM =			CAST(NULL AS VARCHAR(50)),
	BILL_DT =			CAST(NULL AS DATETIME),
	GC_CONTR_ID =	cast(null as varchar(40)),
	GC_CONTR =		cast(null as varchar(200)),
	GC_NUMBER =			cast(null as varchar(100)),
	GC_DATE =			cast(null as DateTime),
	GC_SRV_NUMBER =		cast(null as varchar(70)),
	GC_SRV_DATE =		cast(null as DateTime),
	SUP_USEVAT =	cast(SUP.USE_VAT as int),
	GOODS_CODE = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    GOODS_NAME = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(254))

FROM ACT_RETURN_TO_CONTRACTOR_ITEM	ACI	(NOLOCK)
JOIN ACT_RETURN_TO_CONTRACTOR		AC	(NOLOCK) ON AC.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL = ACI.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL
JOIN LOT							L	(NOLOCK) ON L.ID_LOT_GLOBAL = ACI.ID_LOT_GLOBAL
JOIN STORE							S	(NOLOCK) ON S.ID_STORE = AC.ID_STORE
JOIN CONTRACTOR						AU	(NOLOCK) ON AU.ID_CONTRACTOR = S.ID_CONTRACTOR
JOIN CONTRACTOR						SUP	(NOLOCK) ON SUP.ID_CONTRACTOR = L.ID_SUPPLIER
LEFT JOIN CONTRACTS					CON	(NOLOCK) ON CON.ID_CONTRACTS_GLOBAL = AC.ID_CONTRACTS_GLOBAL
INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS

WHERE 
    AC.DATE BETWEEN @DATE_FROM AND @DATE_TO
    AND (@ALL_STORE = 1 OR S.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP))
    AND (@ALL_DOC = 1 OR EXISTS(SELECT 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 3))
    AND (@ALL_CONTRACTOR = 1 OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = S.ID_CONTRACTOR))
GROUP BY 
    CAST(AC.ID_ACT_RETURN_TO_CONTRACTOR_GLOBAL AS VARCHAR(50)), 
    CAST(AC.MNEMOCODE AS VARCHAR(50)),
    CAST(AC.DATE AS DATETIME), 
    CAST(AU.CODE AS VARCHAR(40)),
    CAST(AU.NAME AS VARCHAR(200)),	
    CAST(S.ID_STORE_GLOBAL AS VARCHAR(40)), 
    CAST(S.NAME AS VARCHAR(100)),
    CAST(SUP.CODE AS VARCHAR(40)), 
    CAST(SUP.NAME AS VARCHAR(200)),
    CAST(SUP.INN AS VARCHAR(40)),
    CAST(SUP.KPP AS VARCHAR(10)),
    CAST(CON.CONTRACTOR_CODE AS VARCHAR(100)),
    CAST(CON.NAME AS VARCHAR(150)),
    CASE AC.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    CASE AC.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    CAST(ISNULL(AC.COMMENT,'') AS VARCHAR(254)),
    CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    CAST(L.VAT_SAL AS DECIMAL(18, 2)),
	cast(SUP.USE_VAT as int),
	CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(256))
	


---------------------------------------------------------------------------------------------------
-- #CHEQUE_LIST
---------------------------------------------------------------------------------------------------
if object_id('tempdb..#CHEQUE_LIST') is not null drop table #CHEQUE_LIST
create table #CHEQUE_LIST
(
	ID_CHEQUE_GLOBAL		uniqueidentifier,
	ID_CASH_SESSION_GLOBAL	uniqueidentifier,
	SEPARATE_TYPE			varchar(5),
	SUMM					numeric(19, 8),
	K						numeric(19, 8),
	CHEQUE_TYPE_int			int,
	CHEQUE_TYPE_char		varchar(2),
	BASE_DOC_DATE			datetime
)

IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 from #TABLE_DATA WHERE ID_TABLE_DATA in (19)))
BEGIN
    insert into #CHEQUE_LIST
	(
		ID_CHEQUE_GLOBAL,
		ID_CASH_SESSION_GLOBAL,
		SEPARATE_TYPE,
		SUMM,
		K,
		CHEQUE_TYPE_int,
		CHEQUE_TYPE_char,
		BASE_DOC_DATE
	)
	select distinct
		ID_CHEQUE_GLOBAL		= CH.ID_CHEQUE_GLOBAL,
		ID_CASH_SESSION_GLOBAL	= CH.ID_CASH_SESSION_GLOBAL,
		SEPARATE_TYPE			= chp.SEPARATE_TYPE,
		SUMM					= cast(ch.SUMM as numeric(19, 8)),
		K						= cast(case when ch.SUMM <> 0 then chp.SUMM/ch.SUMM else 0 end as numeric(19,8)),
		CHEQUE_TYPE_int			= case when ch.CHEQUE_TYPE = 'RETURN' then -1 else 1 end,
		CHEQUE_TYPE_char		= case
			when ch.CHEQUE_TYPE = 'SALE' then ''
			when ch.CHEQUE_TYPE = 'RETURN' and (ch.ID_CASH_SESSION_GLOBAL = base.ID_CASH_SESSION_GLOBAL) then '_C'
			else '_R'
		end,
		BASE_DOC_DATE = CASE WHEN ch.CHEQUE_TYPE = 'RETURN' THEN base.DATE_CHEQUE ELSE NULL END
	from CHEQUE			ch
	join CASH_SESSION	cs		on cs.ID_CASH_SESSION_GLOBAL = ch.ID_CASH_SESSION_GLOBAL
	join CHEQUE_PAYMENT chp		on chp.ID_CHEQUE_GLOBAL = ch.ID_CHEQUE_GLOBAL
	left join CHEQUE	base	on base.ID_CHEQUE_GLOBAL = ch.ID_DOCUMENT_BASE_GLOBAL
	where
		cs.DATE_CLOSE between @DATE_FROM and @DATE_TO and
		ch.DOCUMENT_STATE = 'PROC' and
		ch.CHEQUE_TYPE in ('SALE', 'RETURN')
/*
	;with Not_NEEDED_CHEQUES as
	(
		select distinct gct.CODE, t.ID_CHEQUE_GLOBAL
		from #CHEQUE_LIST t
		join CHEQUE_ITEM chi on chi.ID_CHEQUE_GLOBAL = t.ID_CHEQUE_GLOBAL
		join LOT l on l.ID_LOT_GLOBAL = chi.ID_LOT_GLOBAL
		join GOS_CONTRACT_GOODS gcg on gcg.ID_GOS_CONTRACT_GOODS = l.ID_GOS_CONTRACT_GOODS
		join GOS_CONTRACT gc on gc.ID_GOS_CONTRACT = gcg.ID_GOS_CONTRACT
		left join GOS_CONTRACT_TYPE gct on gct.ID_GOS_CONTRACT_TYPE_GLOBAL = gc.ID_GOS_CONTRACT_TYPE_GLOBAL
		where
			IsNull(gct.CODE, '') <> 'SUBSIDIES'
	)
	delete from t
	from #CHEQUE_LIST t
	join Not_NEEDED_CHEQUES on t.ID_CHEQUE_GLOBAL = Not_NEEDED_CHEQUES.ID_CHEQUE_GLOBAL
*/
end

--select * from #CHEQUE_LIST

declare @SqlCreateIndex varchar(1000)
set @SqlCreateIndex = 'CREATE INDEX IX_'+REPLACE(CAST(newid() as varchar(36)),'-','')+' ON [#CHEQUE_LIST](ID_CASH_SESSION_GLOBAL)'
exec(@SqlCreateIndex)
set @SqlCreateIndex = 'CREATE INDEX IX_'+REPLACE(CAST(newid() as varchar(36)),'-','')+' ON [#CHEQUE_LIST](ID_CHEQUE_GLOBAL)'
exec(@SqlCreateIndex)

;with cte as
(
		select
			ID_SERVICE = av.ID_OBJECT,
			av.VALUE
		from ATTRIBUTE_VALUES		av
		join ATTRIBUTE				a	on a.ID_ATTRIBUTE = av.ID_ATTRIBUTE
		where
			a.NAME = '“ËÔ ÛÒÎÛ„Ë' and
			a.ID_ATTRIBUTE_OBJECT = 'C87B7C69-5AB6-4660-B564-12E406C192F6' and
			av.value <> '' and
			av.DATE_DELETED is NULL
)
select top 1 Z = 9
into #SRV_ATTR
from SERVICE srv
left join cte on cte.ID_SERVICE = srv.ID_SERVICE
where
	srv.DATE_DELETED is NULL and
	cte.VALUE is NULL

if (@@rowcount <> 0)
begin
	raiserror('ÕÂ Û ‚ÒÂı ÛÒÎÛ„ ÛÍ‡Á‡Ì ÚËÔ ÛÒÎÛ„Ë.  ÓÂÍÚÌ‡ˇ ‚˚„ÛÁÍ‡ ÌÂ‚ÓÁÏÓÊÌ‡!', 16, 0)
	return
end

SELECT
	ID_CHEQUE_GLOBAL		= s.ID_CHEQUE_GLOBAL,
	ID_CASH_SESSION_GLOBAL	= ch.ID_CASH_SESSION_GLOBAL,
	ID_STORE_GLOBAL			= st.ID_STORE_GLOBAL,
	NM_STORE				= l.STORE_NM,
	SEPARATE_TYPE			= s.SEPARATE_TYPE,--CP.TYPE_PAYMENT,
	VAT_SUP					= case when l.REC_TYPE = 'LOT' then l.VAT_SUP else 0 end, -- »Á-Á‡ Ó¯Ë·ÍË ‚ MV_LOT_SERVICE ÔËıÓ‰ËÚÒˇ ‰ÂÎ‡Ú¸ Ú‡Í
	VAT_SAL					= case when l.REC_TYPE = 'LOT' then l.VAT_SAL else l.VAT_SUP end, -- »Á-Á‡ Ó¯Ë·ÍË ‚ MV_LOT_SERVICE ÔËıÓ‰ËÚÒˇ ‰ÂÎ‡Ú¸ Ú‡Í
	SUM_SUP					= K * s.CHEQUE_TYPE_int * (lm.SUM_SUP + case when st.ID_STORE_TYPE_GLOBAL = @ID_STORE_TYPE_PRODUCED_OPTICS then lo.PRICE_PROD else 0.0 end),
	SVAT_SUP				= K * s.CHEQUE_TYPE_int * lm.SVAT_SUP,
	SUM_ACC					= cast(K * s.CHEQUE_TYPE_int * lm.SUM_ACC as decimal(18, 2)),
	SVAT_ACC				= K * s.CHEQUE_TYPE_int * case when l.REC_TYPE = 'LOT' then lm.SVAT_ACC else lm.SUM_ACC * l.VAT_SUP / (100 + l.VAT_SUP) end, -- »Á-Á‡ Ó¯Ë·ÍË ‚ MV_LOT_SERVICE_MOVEMENT ÔËıÓ‰ËÚÒˇ ‰ÂÎ‡Ú¸ Ú‡Í
    SUM_DISCOUNT			= K * s.CHEQUE_TYPE_int * lm.DISCOUNT_ACC,
	SUFFIX					= s.CHEQUE_TYPE_char + l.SUFFIX,
	BASE_DOC_DATE			= s.BASE_DOC_DATE
into #CHEQUE_SUMS
from #CHEQUE_LIST				s
join CHEQUE_ITEM				chi	on chi.ID_CHEQUE_GLOBAL = s.ID_CHEQUE_GLOBAL
join CHEQUE						ch	on ch.ID_CHEQUE_GLOBAL = chi.ID_CHEQUE_GLOBAL
join MV_LOT_SERVICE_MOVEMENT	lm	on lm.ID_DOCUMENT_ITEM = chi.ID_CHEQUE_ITEM_GLOBAL
join
(
	select
		ls.ID_LOT_GLOBAL,
		ls.ID_STORE,
		ls.REC_TYPE,
		STORE_NM = case when ls.REC_TYPE = 'LOT' then ls.STORE_NM else attr.VALUE end,
		ls.VAT_SUP,
		ls.VAT_SAL,
		SUFFIX = case when ls.REC_TYPE = 'LOT' then '' else '_S' end
	from MV_LOT_SERVICE				ls
	left join SERVICE_4_SALE_ITEM	s4si on s4si.ID_SERVICE_4_SALE = ls.ID_LOT_GLOBAL
	left join
	(
		select
			ID_SERVICE = av.ID_OBJECT,
			av.VALUE
		from ATTRIBUTE_VALUES		av
		join ATTRIBUTE				a	on a.ID_ATTRIBUTE = av.ID_ATTRIBUTE
		where
			a.NAME = '“ËÔ ÛÒÎÛ„Ë' and
			a.ID_ATTRIBUTE_OBJECT = 'C87B7C69-5AB6-4660-B564-12E406C192F6'
	) attr on attr.ID_SERVICE = s4si.ID_SERVICE
)								l	on l.ID_LOT_GLOBAL = lm.ID_LOT_GLOBAL
left join STORE					st	on st.ID_STORE = l.ID_STORE
left join LOT					lo	on lo.ID_LOT_GLOBAL = lm.ID_LOT_GLOBAL

;with cte as
(
select
	ID_CHEQUE_GLOBAL,
	SEPARATE_TYPE,
	SUM_ACC = sum(cs.SUM_ACC)
from #CHEQUE_SUMS cs
group by
	ID_CHEQUE_GLOBAL,
	SEPARATE_TYPE
),
corr as
(
select
	cte.ID_CHEQUE_GLOBAL,
	cte.SEPARATE_TYPE,
	chs.ID_STORE_GLOBAL,
	chs.ID_CASH_SESSION_GLOBAL,
	NM_STORE,
	chs.VAT_SAL,
	chs.VAT_SUP,
	chs.SUFFIX,
	CORRECTION_SUM = case when ch.CHEQUE_TYPE = 'RETURN' then -1 else +1 end *chp.SUMM - cte.SUM_ACC,
	R = ROW_NUMBER() over (partition by chs.ID_CHEQUE_GLOBAL, chs.SEPARATE_TYPE order by chs.VAT_SAL desc, chs.VAT_SUP desc, ID_STORE_GLOBAL, NM_STORE),
	chs.BASE_DOC_DATE
from cte
join CHEQUE_PAYMENT	chp	on chp.ID_CHEQUE_GLOBAL = cte.ID_CHEQUE_GLOBAL and chp.SEPARATE_TYPE = cte.SEPARATE_TYPE
join CHEQUE			ch	on ch.ID_CHEQUE_GLOBAL = chp.ID_CHEQUE_GLOBAL
join #CHEQUE_SUMS	chs	on chs.ID_CHEQUE_GLOBAL = chp.ID_CHEQUE_GLOBAL and chs.SEPARATE_TYPE = chp.SEPARATE_TYPE
where
	cte.SUM_ACC <> chp.SUMM
)
insert into #CHEQUE_SUMS
select
	ID_CHEQUE_GLOBAL		= corr.ID_CHEQUE_GLOBAL,
	ID_CASH_SESSION_GLOBAL	= corr.ID_CASH_SESSION_GLOBAL,
	ID_STORE_GLOBAL			= corr.ID_STORE_GLOBAL,
	NM_STORE				= corr.NM_STORE,
	SEPARATE_TYPE			= corr.SEPARATE_TYPE,--CP.TYPE_PAYMENT,
	VAT_SUP					= corr.VAT_SUP,
	VAT_SAL					= corr.VAT_SAL,
	SUM_SUP					= 0,
	SVAT_SUP				= 0,
	SUM_ACC					= corr.CORRECTION_SUM,
	SVAT_ACC				= 0,
	SUM_DISCOUNT			= 0,
	SUFFIX					= corr.SUFFIX,
	BASE_DOC_DATE			= corr.BASE_DOC_DATE
from corr
where
	corr.R = 1

--202103
DECLARE @CHEQUE_GROUP BIT
SET @CHEQUE_GROUP=1

declare @STORE_GROUP BIT
SET @STORE_GROUP = 1

DECLARE @GROUP_SUPPLIER BIT 
SET @GROUP_SUPPLIER = 0

declare @LAYOUT_GROUPS BIT
set @LAYOUT_GROUPS=0

declare @OFF_BALANCE_GROUPS BIT 
set @OFF_BALANCE_GROUPS =0

declare @CASH_SESSION_DATE_CLOSE BIT 
set @CASH_SESSION_DATE_CLOSE =1

declare @GROUP_NDS BIT
SET @GROUP_NDS =0

declare @INVOICE_NUMBER_GROUPS BIT
SET @INVOICE_NUMBER_GROUPS =0






-- -------------------------------------------------------------------------------------------
-- -- --  ¿——Œ¬€≈ ◊≈ »
-- -- -------------------------------------------------------------------------------------------
IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 7)) AND ISNULL(@CASH_SESSION_MOVE,0)=0
--IF (0=1) AND ISNULL(@CASH_SESSION_MOVE,0)=0
INSERT INTO @RESULT_TAB
SELECT
    
	--PDATEBL = @PDATEBL, PDATEEL = @PDATEEL,
    OPER_CODE = CASE WHEN @CHEQUE_GROUP=1 THEN 'CHEQUE' ELSE 'CASH_SESSION' END,
	
	-- 2021 03 17
    --DOC_ID   = CASE WHEN @CHEQUE_GROUP=1 THEN CAST(CH.ID_CHEQUE_GLOBAL AS VARCHAR(50)) ELSE ISNULL(CS.MNEMOCODE, CAST(CS.ID_CASH_SESSION_GLOBAL AS VARCHAR(50))) END,
    --DOC_NUM  = CASE WHEN @CHEQUE_GROUP=1 THEN CAST(CH.ID_CHEQUE_GLOBAL as varchar(50)) ELSE ISNULL(CS.MNEMOCODE, CAST(CS.ID_CASH_SESSION AS VARCHAR(50))) END,
    
	-- Á‡ÔËÒ˚‚‡ÂÏ ‰‡ÌÌ˚Â Ó Í‡ÒÒÓ‚ÓÈ ÒÏÂÌÂ
	DOC_ID   = CAST(CS.ID_CASH_SESSION_GLOBAL AS VARCHAR(50)),
    DOC_NUM  = CAST (CS.MNEMOCODE AS VARCHAR(50)), -- CAST(CS.ID_CASH_SESSION AS VARCHAR(50))),
    


	DOC_DATE = CASE WHEN @CHEQUE_GROUP=1 THEN cs.DATE_CLOSE ELSE CASE WHEN @CASH_SESSION_DATE_CLOSE=1 THEN CS.DATE_CLOSE ELSE CS.DATE_OPEN END END,
	

	AU_CODE = CAST(NULL AS VARCHAR(40)),
    AU_NAME = CAST(NULL AS VARCHAR(200)),
	
	AU_TO_CODE = CAST(NULL AS VARCHAR(40)),
	AU_TO_NAME = CAST(NULL AS VARCHAR(200)),


	
	STORE_ID = CASE WHEN @STORE_GROUP = 1 THEN CAST(STORE.ID_STORE_GLOBAL AS VARCHAR(40)) ELSE NULL END,
    STORE_NM = CASE WHEN @STORE_GROUP = 1 THEN L.STORE_NM ELSE NULL END,
    STORE_TO_I = CAST(NULL AS VARCHAR(40)),
    STORE_TO_N = CAST(NULL AS VARCHAR(100)),
    
	--CONTRGR_ID = CASE WHEN @LAYOUT_GROUPS=1 THEN CAST(CG.ID_CONTRACTOR_GROUP AS VARCHAR(40)) ELSE NULL END,
    --CONTRGR_NM = CASE WHEN @LAYOUT_GROUPS=1  THEN CG.NAME ELSE NULL END,
    
	
	CONTR_ID = CAST(C.ID_CONTRACTOR_GLOBAL AS VARCHAR(40)), 
	CONTR_NM = C.NAME, 
	CONTR_INN = C.INN,
    --CONTR_NM = CASE WHEN @LAYOUT_GROUPS=1  THEN CG.NAME ELSE NULL END,
	--CONTR_INN = CAST(NULL AS VARCHAR(40)),
	CONTR_KPP = CAST(NULL AS VARCHAR(10)),
	
	CON_CODE = CAST(NULL AS VARCHAR(100)),
	CON_NAME = CAST(NULL AS VARCHAR(150)),

	[PROC] =1 ,
	[DEL]  = 0,

	COMMENT = CAST(NULL AS VARCHAR(254)), 
	
	DOC_INNUM = CAST(NULL AS VARCHAR(40)), 
	DOC_IN_DAT = CAST(NULL AS DATETIME),
    
	TYPE_PAY = CAST(CH.SEPARATE_TYPE AS VARCHAR(5))  ,-- CAST(NULL AS VARCHAR(5)),  -- ‚ÂÓˇÚÌÂÂ ‚ÒÂ„Ó Ì‡Î ·ÂÁÌ‡Î 
	--TYPE_PAY =  CAST (CP.TYPE_PAY as VARCHAR(5)), -- CAST(NULL AS VARCHAR(5)),  -- ‚ÂÓˇÚÌÂÂ ‚ÒÂ„Ó Ì‡Î ·ÂÁÌ‡Î 
	
	DED_TYPE_ID =  CAST(NULL AS VARCHAR(40)),
	DED_TYPE_NM =  CAST(NULL AS VARCHAR(50)), 

	BASE_DOC_ID   =  CAST(NULL AS VARCHAR(50)), 
	BASE_DOC_NUM  = CAST(CH.ID_CHEQUE_GLOBAL AS VARCHAR(50))  , --CAST(NULL AS VARCHAR(50)), 
	BASE_DOC_DATE =  CAST(NULL AS datetime), 

	CORRECT_SF_TYPE =  CAST(NULL AS INT),
	QUANTITY = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE_char = 'RETURN' THEN 0 ELSE 1 END * CP.QUANTITY/DENOMINATOR) AS DECIMAL(18,2)),
     
	--NUM_KASSA = CAST(CR.NAME_CASH_REGISTER AS VARCHAR(40)), OPERT = 1,
    NDS_RATE = CASE WHEN @GROUP_NDS = 1 THEN CAST(L.VAT_SUP AS DECIMAL(18,4)) ELSE NULL END,
    NDS_RATE_R = NULL,
    OPT_YNDS = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE_char = 'RETURN' THEN -1 ELSE 1 END * L.PRICE_SUP * CP.QUANTITY) AS DECIMAL(18,4)),
	--OPT_NNDS = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN -1 ELSE 1 END * (L.PRICE_SUP - L.PVAT_SUP) * CP.QUANTITY) AS DECIMAL(18,4)),
    OPT_NDS  = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE_char = 'RETURN' THEN -1 ELSE 1 END * L.PVAT_SUP * CP.QUANTITY) AS DECIMAL(18,4)),
    RET_YNDS = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE_char = 'RETURN' THEN -1 ELSE 1 END * CP.SUMM) AS DECIMAL(18,4)),
    RET_NDS  = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE_char = 'RETURN' THEN -1 ELSE 1 END * (CP.SUMM * L.VAT_SAL / (100 + L.VAT_SAL)) ) AS DECIMAL(18,4)),


    --RET_DISC = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN -1 ELSE 1 END * CP.SUMM_DISCOUNT) AS DECIMAL(18,4)),
	RET_DISC = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE_char = 'RETURN' THEN -1 ELSE 1 END * CP.SUMM_DISCOUNT) AS DECIMAL(18,4)),
    --RET_ADD  = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN -1 ELSE 1 END * ABS((CP.SUMM - (CP.SUMM * L.VAT_SAL / (100 + L.VAT_SAL))) - (L.PRICE_SUP - L.PVAT_SUP) * CP.QUANTITY))  AS DECIMAL(18,4)),
	--RET_NNDS = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE_char = 'RETURN' THEN -1 ELSE 1 END * (CP.SUMM - (CP.SUMM * L.VAT_SAL / (100 + L.VAT_SAL))) ) AS DECIMAL(18,4)),
    --NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
    EMP_CLOS =  CAST(NULL AS VARCHAR(100)), 
	--SUPPL_ID = CASE WHEN @GROUP_SUPPLIER = 1 THEN L.[SUP_ID_CONTRACTOR] ELSE NULL END,
    --SUPPL_NM = CASE WHEN @GROUP_SUPPLIER = 1 THEN L.[SUP_NAME] ELSE NULL END,
    --ID_PAYER = NULL,
    --PAYER = NULL,
    /*
	RET_YNDS_K =  CAST(SUM(CASE WHEN CP.TYPE_PAsYMENT IN ('TYPE2','TYPE3') THEN -- ·˚Î‡ ÓÔÎ‡Ú‡ ·ÂÁÌ‡ÎÓÏ
                            CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN -1 ELSE 1 END * (L.PRICE_SAL * CP.QUANTITY-CP.SUMM_DISCOUNT)
                            ELSE 0
                       END) AS DECIMAL(18,2)),
    DATE_PAYMENT = NULL, */
    --INV_NUM  = case when CAST(SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN 0 ELSE 1 END * CP.QUANTITY) AS DECIMAL(18,2)) > 0 then CASE WHEN @INVOICE_NUMBER_GROUPS = 1 THEN L.INVOICE_NUM ELSE NULL END else  null end,
    --INV_DATE = case when CAST(SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN 0 ELSE 1 END * CP.QUANTITY) AS DECIMAL(18,2)) > 0 then CASE WHEN @INVOICE_NUMBER_GROUPS = 1 THEN L.INVOICE_DATE ELSE NULL END else  null end,
    
	BILL_NUM = CAST(NULL AS VARCHAR(200)), 
	BILL_DT  = CAST(NULL AS datetime), 
	 
	GC_CONTR_ID	= CAST(NULL AS VARCHAR(200)), 
	GC_CONTR	= CAST(NULL AS VARCHAR(200)), 
	GC_NUMBER	= CAST(NULL AS VARCHAR(100)), 
	GC_DATE		= CAST(NULL AS datetime), 
	GC_SRV_NUMBER	= CAST(NULL AS VARCHAR(70)), 
	GC_SRV_DATE		= CAST(NULL AS datetime), 
	SUP_USEVAT		= CAST(NULL AS int), 
	/*
	CON_NAME = NULL,
    CON_CODE = NULL,
    DATE_CON = NULL,
    I_O_NUM = NULL,
    I_O_DATE = NULL,
    GTD = NULL,
    COUNTRY = NULL,
    PER_SER = NULL,
    SUM_SER = NULL,
    OFF_BALANCE = CAST((CASE WHEN @OFF_BALANCE_GROUPS = 1 THEN ISNULL(L.OFF_BALANCE, 0) ELSE NULL END) AS BIGINT),
    GOODS_SENT = CAST(NULL AS BIGINT),
    TSTORE_I = CAST(NULL AS VARCHAR(40)),
    TSTORE_N = CAST(NULL AS VARCHAR(100)),
    TTSTORE_I = CAST(NULL AS VARCHAR(40)),
    TTSTORE_N = CAST(NULL AS VARCHAR(100)),
	*/
    --GOODS_CODE =  CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN L.GOODS_CODE ELSE NULL END) AS VARCHAR(40)),
    --GOODS_NAME =  CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN L.GOODS_NAME ELSE NULL END) AS VARCHAR(254))
    
	GOODS_CODE =  CAST(GOODS.ID_GOODS_GLOBAL  AS VARCHAR(40)),
    GOODS_NAME =  CAST(L.GOODS_NAME  AS VARCHAR(254))
    
	
	
	--GOODS_MEASURE = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN L.GOODS_MEASURE ELSE NULL END) AS VARCHAR(40)),
	/*s
    RET_TYPE1 = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN -1 ELSE 1 END * CP.SUMM * cp.[k1]) AS DECIMAL(18, 4)),
    RET_TYPE2 = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN -1 ELSE 1 END * CP.SUMM * cp.[k2]) AS DECIMAL(18, 4)),
    RET_TYPE4 = CAST(SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN -1 ELSE 1 END * CP.SUMM * cp.[k4]) AS DECIMAL(18, 4)),
	COST = cast(SUM(CASE WHEN CH.CHEQUE_TYPE = 'RETURN' THEN -1 ELSE 1 END * ISNULL(l.COST, 0) * CP.QUANTITY) as DECIMAL(18,4))
	*/
    FROM
        CASH_SESSION CS
    INNER JOIN CASH_REGISTER CR ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
    INNER JOIN CONTRACTOR C ON CR.ID_CONTRACTOR = C.ID_CONTRACTOR
    INNER JOIN #CHEQUE_LIST CH ON CS.ID_CASH_SESSION_GLOBAL = CH.ID_CASH_SESSION_GLOBAL
    INNER JOIN
    (
        SELECT
            s.ID_CHEQUE_GLOBAL,
            TYPE_PAYMENT = CP.SEPARATE_TYPE,
            QUANTITY = CH_I.QUANTITY,
            ID_LOT_GLOBAL = CH_I.ID_LOT_GLOBAL,
            SUMM_DISCOUNT = CH_I.SUMM_DISCOUNT,
            SUMM = CH_I.SUMM,

            s.[k1],
            s.[k2],
            s.[k4]

            FROM
                (
                    select
                        t.[ID_CHEQUE_GLOBAL],
                        t.[ID_CHEQUE_PAYMENT],
                        [k1]    = cast(case when t.[Total] <> 0 then t.[TYPE1]/t.[Total] else 0 end as numeric(19,8)),
                        [k2]    = cast(case when t.[Total] <> 0 then t.[TYPE2]/t.[Total] else 0 end as numeric(19,8)),
                        [k4]    = cast(case when t.[Total] <> 0 then t.[TYPE4]/t.[Total] else 0 end as numeric(19,8))
                        from
                        (
                            SELECT
                                CP.[ID_CHEQUE_GLOBAL],
                                [ID_CHEQUE_PAYMENT]=MAX(CP.ID_CHEQUE_PAYMENT),
                                [Total] = cast(SUM(CP.SUMM) as numeric(19,8)),
                                [TYPE1] = SUM(case when 'TYPE1' in (TYPE_PAYMENT,CP.SEPARATE_TYPE) then CP.SUMM else 0 end),
                                [TYPE2] = SUM(case when 'TYPE2' in (TYPE_PAYMENT,CP.SEPARATE_TYPE) then CP.SUMM else 0 end),
                                [TYPE4] = SUM(case when 'TYPE4' in (TYPE_PAYMENT,CP.SEPARATE_TYPE) then CP.SUMM else 0 end)
                                FROM
                                    CHEQUE_PAYMENT CP
                                    inner join #CHEQUE_LIST t on t.ID_CHEQUE_GLOBAL = cp.ID_CHEQUE_GLOBAL
                                GROUP BY
                                    CP.ID_CHEQUE_GLOBAL--,
                        )t
                ) s
                inner join CHEQUE_PAYMENT CP on CP.ID_CHEQUE_PAYMENT = s.ID_CHEQUE_PAYMENT
                inner join CHEQUE_ITEM CH_I ON CH_I.ID_CHEQUE_GLOBAL = s.ID_CHEQUE_GLOBAL
				

    ) CP ON CP.ID_CHEQUE_GLOBAL = CH.ID_CHEQUE_GLOBAL

    -- “Œ¬¿–+”—À”√¿
    INNER JOIN MV_LOT_SERVICE L ON L.ID_LOT_GLOBAL = CP.ID_LOT_GLOBAL
    LEFT JOIN #DIST_CONTRACTOR_2_CONTRACTOR_GROUP CCG ON CCG.ID_CONTRACTOR = C.ID_CONTRACTOR AND @LAYOUT_GROUPS=1
    LEFT JOIN CONTRACTOR_GROUP CG ON CG.ID_CONTRACTOR_GROUP = CCG.ID_CONTRACTOR_GROUP AND CG.DATE_DELETED IS NULL   AND @LAYOUT_GROUPS=1
	LeFT JOIN GOODS on GOODS.CODE = L.GOODS_CODE
	LEFT JOIn STORE on STORE.ID_STORE = L.ID_STORE

WHERE 1=1
        AND (@ALL_STORE = 1 OR L.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP))
        AND (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 7))
        AND (@ALL_CONTRACTOR = 1 OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = CR.ID_CONTRACTOR))

    GROUP BY
        CS.ID_CASH_SESSION_GLOBAL, CS.MNEMOCODE, ID_CASH_SESSION, CR.NAME_CASH_REGISTER, CS.DATE_OPEN, CS.DATE_CLOSE,
    --CASE WHEN @STORE_GROUP = 1 THEN CAST(L.ID_STORE AS VARCHAR(40)) ELSE NULL END,
	CASE WHEN @STORE_GROUP = 1 THEN CAST(STORE.ID_STORE_GLOBAL AS VARCHAR(40)) ELSE NULL END,
    CASE WHEN @STORE_GROUP = 1 THEN L.STORE_NM ELSE NULL END,
        CASE WHEN @LAYOUT_GROUPS=1 THEN CAST(CG.ID_CONTRACTOR_GROUP AS VARCHAR(40)) ELSE NULL END,
        CASE WHEN @LAYOUT_GROUPS=1  THEN CG.NAME ELSE NULL END,
        C.ID_CONTRACTOR_GLOBAL, C.NAME, C.INN,
        CASE WHEN @GROUP_NDS = 1 THEN CAST(L.VAT_SUP AS DECIMAL(18,4)) ELSE NULL END,
        CASE WHEN @GROUP_SUPPLIER = 1 THEN L.[SUP_ID_CONTRACTOR] ELSE NULL END,
        CASE WHEN @GROUP_SUPPLIER = 1 THEN L.[SUP_NAME]          ELSE NULL END,
    CASE WHEN @INVOICE_NUMBER_GROUPS = 1 THEN L.INVOICE_NUM ELSE NULL END,
    CASE WHEN @INVOICE_NUMBER_GROUPS = 1 THEN L.INVOICE_DATE ELSE NULL END,
	    CAST((CASE WHEN @OFF_BALANCE_GROUPS = 1 THEN ISNULL(L.OFF_BALANCE, 0) ELSE NULL END) AS BIGINT),
        CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN L.GOODS_CODE ELSE NULL END) AS VARCHAR(16)),
        CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN L.GOODS_NAME ELSE NULL END) AS VARCHAR(256)),
    CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN L.GOODS_MEASURE ELSE NULL END) AS VARCHAR(40)),
    CASE WHEN @CHEQUE_GROUP=1 THEN CAST(CH.ID_CHEQUE_GLOBAL AS VARCHAR(50)) ELSE ISNULL(CS.MNEMOCODE, CAST(CS.ID_CASH_SESSION AS VARCHAR(50))) END,
    CASE WHEN @CHEQUE_GROUP=1 THEN CAST(CH.ID_CHEQUE_GLOBAL as varchar(50)) ELSE ISNULL(CS.MNEMOCODE, CAST(CS.ID_CASH_SESSION AS VARCHAR(50))) END,
    CASE WHEN @CHEQUE_GROUP=1 THEN cs.DATE_CLOSE ELSE CASE WHEN @CASH_SESSION_DATE_CLOSE=1 THEN CS.DATE_CLOSE ELSE CS.DATE_OPEN END END ,
	 CAST(GOODS.ID_GOODS_GLOBAL  AS VARCHAR(40)),
     CAST(L.GOODS_NAME  AS VARCHAR(254)),
	 CAST(CH.SEPARATE_TYPE AS VARCHAR(5)) ,
	 CAST(CH.ID_CHEQUE_GLOBAL AS VARCHAR(50))

--	 select * from @RESULT_TAB
	
	






	----- 2021
	
-- -- -------------------------------------------------------------------------------------------
-- -- --  ¿——Œ¬¿ﬂ —Ã≈Õ¿ (ÔÓ ‰‚ËÊÂÌË˛)
-- -- -------------------------------------------------------------------------------------------
IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 from #TABLE_DATA WHERE ID_TABLE_DATA = 19))
INSERT INTO @RESULT_TAB
	select
		OPER_CODE			= 'CASH_SESSION' + chp.SUFFIX,
		DOC_ID				= CAST(CS.ID_CASH_SESSION_GLOBAL AS VARCHAR(50)), 
		DOC_NUM				= CAST(CS.MNEMOCODE AS VARCHAR(50)),
		DOC_DATE			= CAST(CS.DATE_CLOSE AS DATETIME), 
		AU_CODE				= CAST(C.CODE AS VARCHAR(40)),
		AU_NAME				= CAST(C.NAME AS VARCHAR(200)),
		AU_TO_CODE			= CAST(NULL AS VARCHAR(40)),	
		AU_TO_NAME			= CAST(NULL AS VARCHAR(200)),	
		STORE_ID			= CAST(chp.ID_STORE_GLOBAL AS VARCHAR(40)),
		STORE_NM			= CAST(chp.NM_STORE as varchar(100)),
		STORE_TO_I			= CAST(NULL AS VARCHAR(40)), 
		STORE_TO_N			= CAST(NULL AS VARCHAR(100)),
		CONTR_ID			= CAST(NULL AS VARCHAR(40)), 
		CONTR_NM			= CAST(NULL AS VARCHAR(200)),
		CONTR_INN			= CAST(NULL AS VARCHAR(40)),
		CONTR_KPP			= CAST(NULL AS VARCHAR(10)),
		CON_CODE			= CAST(NULL AS VARCHAR(100)),
		CON_NAME			= CAST(NULL AS VARCHAR(150)),
		[PROC]				= CS.STATUS,
		DEL					= 0,
		COMMENT				= CAST(NULL AS VARCHAR(254)),
		DOC_INNUM			= CAST(NULL AS VARCHAR(40)), 
		DOC_IN_DAT			= CAST(NULL AS DATETIME),
		TYPE_PAY			= CAST(chp.SEPARATE_TYPE AS VARCHAR(5)), 
		DED_TYPE_ID			= CAST(NULL AS VARCHAR(40)), 
		DED_TYPE_NM			= CAST(NULL AS VARCHAR(50)), 
		BASE_DOC_ID			= CAST(NULL AS VARCHAR(50)), 
		BASE_DOC_NUM		= CAST(NULL AS VARCHAR(50)), 
		BASE_DOC_DATE		= CAST(chp.BASE_DOC_DATE AS DATETIME),
		CORRECT_SF_TYPE		= CAST(NULL AS INT),
		QUANTITY			= CAST(NULL AS DECIMAL(18, 2)),
		NDS_RATE			= CAST(chp.VAT_SUP				AS DECIMAL(18, 2)),
		NDS_RATE_R			= CAST(chp.VAT_SAL				AS DECIMAL(18, 2)),
		OPT_YNDS			= CAST(SUM(chp.SUM_SUP)			AS DECIMAL(18, 2)), 
		OPT_NDS				= CAST(SUM(chp.SVAT_SUP)		AS DECIMAL(18, 2)),
		RET_YNDS			= CAST(SUM(chp.SUM_ACC)			AS DECIMAL(18, 2)), 
		RET_NDS				= CAST(SUM(chp.SVAT_ACC)		AS DECIMAL(18, 2)),
		RET_DISC			= CAST(SUM(chp.SUM_DISCOUNT)	AS DECIMAL(18, 2)),
		EMP_CLOS			= CAST(ISNULL(MU.FULL_NAME, MU.NAME) AS VARCHAR(100)),
		BILL_NUM			= CAST(NULL AS VARCHAR(50)),
		BILL_DT				= CAST(NULL AS DATETIME),
		GC_CONTR_ID =	cast(null as varchar(40)),
		GC_CONTR		= cast(null as varchar(200)),
		GC_NUMBER			= cast(null as varchar(100)),
		GC_DATE				= cast(null as DateTime),
		GC_SRV_NUMBER		= cast(null as varchar(70)),
		GC_SRV_DATE			= cast(null as DateTime),
	    
		SUP_USEVAT = cast(null as int),
	    GOODS_CODE = '', --,CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.CODE ELSE NULL END) AS VARCHAR(38)),
        GOODS_NAME = '' --CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(254))

	from CASH_SESSION	CS
	JOIN CASH_REGISTER	CR	ON CS.ID_CASH_REGISTER = CR.ID_CASH_REGISTER
	LEFT JOIN META_USER	MU	ON MU.ID_USER = CONVERT(VARCHAR(36), CS.ID_USER_CLOSE_GLOBAL)
	JOIN CONTRACTOR		C	ON CR.ID_CONTRACTOR = C.ID_CONTRACTOR
	JOIN #CHEQUE_SUMS	chp	ON chp.ID_CASH_SESSION_GLOBAL = cs.ID_CASH_SESSION_GLOBAL
	where 1=1
	and (@ALL_STORE = 1			OR chp.ID_STORE_GLOBAL IN (SELECT sto.ID_STORE_GLOBAL from #STORE tmp join STORE sto on sto.ID_STORE = tmp.ID_STORE))
	and (@ALL_DOC = 1			OR EXISTS(SELECT TOP 1 1 from #TABLE_DATA WHERE ID_TABLE_DATA = 19))
	and (@ALL_CONTRACTOR = 1	OR EXISTS(SELECT 1 from #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = CR.ID_CONTRACTOR))
	group by
		chp.SUFFIX,
		CAST(CS.ID_CASH_SESSION_GLOBAL AS VARCHAR(50)), 
		CAST(CS.MNEMOCODE AS VARCHAR(50)),
		CAST(CS.DATE_CLOSE AS DATETIME), 
		CAST(C.CODE AS VARCHAR(40)),
		CAST(C.NAME AS VARCHAR(200)),
		CAST(chp.ID_STORE_GLOBAL AS VARCHAR(40)),
		CAST(chp.NM_STORE as varchar(100)),
		CS.STATUS,
		CAST(chp.SEPARATE_TYPE AS VARCHAR(5)), 
		CAST(chp.BASE_DOC_DATE AS DATETIME),
		
		CAST(chp.VAT_SUP					AS DECIMAL(18, 2)),
		CAST(chp.VAT_SAL					AS DECIMAL(18, 2)),
		CAST(ISNULL(MU.FULL_NAME, MU.NAME) AS VARCHAR(100))--,
		--CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN GOODS_CODE ELSE NULL END) AS VARCHAR(16)),
        --CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN GOODS_NAME ELSE NULL END) AS VARCHAR(256))
	having
		CAST(SUM(chp.SUM_SUP)				AS DECIMAL(18, 2)) <> 0 or 
		CAST(SUM(chp.SVAT_SUP)				AS DECIMAL(18, 2)) <> 0 or  
		CAST(SUM(chp.SUM_ACC)				AS DECIMAL(18, 2)) <> 0 or 
		CAST(SUM(chp.SVAT_ACC)				AS DECIMAL(18, 2)) <> 0 or 
		CAST(SUM(chp.SUM_DISCOUNT)			AS DECIMAL(18, 2)) <> 0

-- -- -------------------------------------------------------------------------------------------
-- -- -- œ≈–≈Ã≈Ÿ≈Õ»≈ “Œ¬¿–¿
-- -- -------------------------------------------------------------------------------------------
IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 8))
INSERT INTO @RESULT_TAB
SELECT
    OPER_CODE =			'MOVEMENT', 
    DOC_ID =			CAST(M.ID_MOVEMENT_GLOBAL AS VARCHAR(50)), 
    DOC_NUM =			CAST(M.MNEMOCODE AS VARCHAR(50)),
    DOC_DATE =			CAST(M.DATE AS DATETIME), 
    AU_CODE =			CAST(AU.CODE AS VARCHAR(40)),
    AU_NAME =			CAST(AU.NAME AS VARCHAR(200)),
    AU_TO_CODE =		CAST(AU_TO.CODE AS VARCHAR(40)),	
    AU_TO_NAME =		CAST(AU_TO.NAME AS VARCHAR(200)),	
    STORE_ID =			CAST(S.ID_STORE_GLOBAL AS VARCHAR(40)), 
    STORE_NM =			CAST(S.NAME AS VARCHAR(100)),
    STORE_TO_I =		CAST(S_TO.ID_STORE_GLOBAL AS VARCHAR(40)), 
    STORE_TO_N =		CAST(S_TO.NAME AS VARCHAR(100)),
    CONTR_ID =			CAST(NULL AS VARCHAR(40)), 
    CONTR_NM =			CAST(NULL AS VARCHAR(200)),
    CONTR_INN =			CAST(NULL AS VARCHAR(40)),
    CONTR_KPP =			CAST(NULL AS VARCHAR(10)),
    CON_CODE =			CAST(NULL AS VARCHAR(100)),
    CON_NAME =			CAST(NULL AS VARCHAR(150)),
    [PROC] =			CASE M.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    DEL =				CASE M.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    COMMENT =			CAST(ISNULL(M.COMMENT,'') AS VARCHAR(254)),
    DOC_INNUM =			CAST(NULL AS VARCHAR(40)), 
    DOC_IN_DAT =		CAST(NULL AS DATETIME),
    TYPE_PAY =			CAST(NULL AS VARCHAR(5)), 
    DED_TYPE_ID =		CAST(NULL AS VARCHAR(40)), 
    DED_TYPE_NM =		CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_ID =		CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_NUM =		CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_DATE =		CAST(NULL AS DATETIME),
    CORRECT_SF_TYPE =	CAST(NULL AS INT),
	QUANTITY =			CAST(SUM(MI.QUANTITY) AS DECIMAL(18, 2)),
    NDS_RATE =			CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    NDS_RATE_R =		CAST(L.VAT_SAL AS DECIMAL(18, 2)),
    OPT_YNDS =			CAST(SUM(L.PRICE_SUP * MI.QUANTITY + case when s.ID_STORE_TYPE_GLOBAL = @ID_STORE_TYPE_PRODUCED_OPTICS then l.PRICE_PROD else 0.0 end) AS DECIMAL(18, 2)), 
    OPT_NDS =			CAST(SUM(L.PVAT_SUP * MI.QUANTITY) AS DECIMAL(18, 2)),
    RET_YNDS =			CAST(SUM(L.PRICE_SAL * MI.QUANTITY) AS DECIMAL(18, 2)), 
    RET_NDS =			CAST(SUM(L.PVAT_SAL * MI.QUANTITY) AS DECIMAL(18, 2)),
    RET_DISC =			CAST(NULL AS DECIMAL(18, 2)),
	EMP_CLOS =			CAST(NULL AS VARCHAR(100)),
	BILL_NUM =			CAST(NULL AS VARCHAR(50)),
	BILL_DT =			CAST(NULL AS DATETIME),
	GC_CONTR_ID =	cast(null as varchar(40)),
	GC_CONTR		= cast(null as varchar(200)),
	GC_NUMBER			= cast(null as varchar(100)),
	GC_DATE				= cast(null as DateTime),
	GC_SRV_NUMBER		= cast(null as varchar(70)),
	GC_SRV_DATE			= cast(null as DateTime),
	SUP_USEVAT =	cast(null as int),
	GOODS_CODE = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    GOODS_NAME = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(254))

FROM MOVEMENT_ITEM		MI		(NOLOCK)
JOIN MOVEMENT			M		(NOLOCK) ON M.ID_MOVEMENT_GLOBAL = MI.ID_MOVEMENT_GLOBAL
LEFT JOIN LOT			L		(NOLOCK) ON L.ID_LOT = MI.ID_LOT_FROM
LEFT JOIN STORE			S		(NOLOCK) ON S.ID_STORE = M.ID_STORE_FROM
LEFT JOIN CONTRACTOR	AU		(NOLOCK) ON AU.ID_CONTRACTOR = S.ID_CONTRACTOR
LEFT JOIN STORE			S_TO	(NOLOCK) ON S_TO.ID_STORE = M.ID_STORE_TO
LEFT JOIN CONTRACTOR	AU_TO	(NOLOCK) ON AU_TO.ID_CONTRACTOR = S_TO.ID_CONTRACTOR
INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS

WHERE 
    M.DATE BETWEEN @DATE_FROM AND @DATE_TO
    AND (@ALL_STORE = 1 
			OR S.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP)
			OR S_TO.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP)
		)
    AND (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 8))
    AND (@ALL_CONTRACTOR = 1 
			OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = S.ID_CONTRACTOR)
			OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = S_TO.ID_CONTRACTOR)
		)
GROUP BY 
    CAST(M.ID_MOVEMENT_GLOBAL AS VARCHAR(50)), 
    CAST(M.MNEMOCODE AS VARCHAR(50)),
    CAST(M.DATE AS DATETIME), 
    CAST(AU.CODE AS VARCHAR(40)),
    CAST(AU.NAME AS VARCHAR(200)),
    CAST(AU_TO.CODE AS VARCHAR(40)),	
    CAST(AU_TO.NAME AS VARCHAR(200)),	
    CAST(S.ID_STORE_GLOBAL AS VARCHAR(40)), 
    CAST(S.NAME AS VARCHAR(100)),
    CAST(S_TO.ID_STORE_GLOBAL AS VARCHAR(40)), 
    CAST(S_TO.NAME AS VARCHAR(100)),
    CASE M.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    CASE M.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    CAST(ISNULL(M.COMMENT,'') AS VARCHAR(254)),
	CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(256)),

    CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    CAST(L.VAT_SAL AS DECIMAL(18, 2))

-- -- -------------------------------------------------------------------------------------------
-- -- -- ¿ “ —œ»—¿Õ»ﬂ
-- -- -------------------------------------------------------------------------------------------
IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 20))
INSERT INTO @RESULT_TAB
SELECT
    OPER_CODE =			'ACT_DEDUCTION', 
    DOC_ID =			CAST(AD.ID_ACT_DEDUCTION_GLOBAL AS VARCHAR(50)), 
    DOC_NUM =			CAST(AD.MNEMOCODE AS VARCHAR(50)),
    DOC_DATE =			CAST(AD.DATE AS DATETIME), 
    AU_CODE =			CAST(AU.CODE AS VARCHAR(40)),
    AU_NAME =			CAST(AU.NAME AS VARCHAR(200)),
    AU_TO_CODE =		CAST(NULL AS VARCHAR(40)),	
    AU_TO_NAME =		CAST(NULL AS VARCHAR(200)),	
    STORE_ID =			CAST(S.ID_STORE_GLOBAL AS VARCHAR(40)), 
    STORE_NM =			CAST(S.NAME AS VARCHAR(100)),
    STORE_TO_I =		CAST(NULL AS VARCHAR(40)), 
    STORE_TO_N =		CAST(NULL AS VARCHAR(100)),
    CONTR_ID =			CAST(NULL AS VARCHAR(40)), 
    CONTR_NM =			CAST(NULL AS VARCHAR(200)),
    CONTR_INN =			CAST(NULL AS VARCHAR(40)),
    CONTR_KPP =			CAST(NULL AS VARCHAR(10)),
    CON_CODE =			CAST(NULL AS VARCHAR(100)),
    CON_NAME =			CAST(NULL AS VARCHAR(150)),
    [PROC] =			CASE AD.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    DEL =				CASE AD.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    COMMENT =			CAST(AD.COMMENT AS VARCHAR(254)),
    DOC_INNUM =			CAST(NULL AS VARCHAR(40)), 
    DOC_IN_DAT =		CAST(NULL AS DATETIME),
    TYPE_PAY =			CAST(NULL AS VARCHAR(5)), 
    DED_TYPE_ID =		CAST(DR.ID_DEDUCTION_REASON_GLOBAL AS VARCHAR(40)), 
    DED_TYPE_NM =		CAST(DR.NAME AS VARCHAR(50)), 
    BASE_DOC_ID =		CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_NUM =		CAST(AD.ORDER_NUMBER AS VARCHAR(50)), 
    BASE_DOC_DATE =		CAST(ORDER_DATE AS DATETIME),
    CORRECT_SF_TYPE =	CAST(NULL AS INT),
	QUANTITY =			CAST(SUM(ADI.QUANTITY) AS DECIMAL(18, 2)),
    NDS_RATE =			CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    NDS_RATE_R =		CAST(L.VAT_SAL AS DECIMAL(18, 2)),
    OPT_YNDS =			CAST(SUM(L.PRICE_SUP * ADI.QUANTITY + case when s.ID_STORE_TYPE_GLOBAL = @ID_STORE_TYPE_PRODUCED_OPTICS then l.PRICE_PROD else 0.0 end) AS DECIMAL(18, 2)), 
    OPT_NDS =			CAST(SUM(L.PVAT_SUP * ADI.QUANTITY) AS DECIMAL(18, 2)),
    RET_YNDS =			CAST(SUM(L.PRICE_SAL * ADI.QUANTITY) AS DECIMAL(18, 2)), 
    RET_NDS =			CAST(SUM(L.PVAT_SAL * ADI.QUANTITY) AS DECIMAL(18, 2)),
    RET_DISC =			CAST(NULL AS DECIMAL(18, 2)),
	EMP_CLOS =			CAST(NULL AS VARCHAR(100)),
	BILL_NUM =			CAST(NULL AS VARCHAR(50)),
	BILL_DT =			CAST(NULL AS DATETIME),
	GC_CONTR_ID =	cast(null as varchar(40)),
	GC_CONTR		= cast(null as varchar(200)),
	GC_NUMBER				= cast(null as varchar(100)),
	GC_DATE				= cast(null as DateTime),
	GC_SRV_NUMBER			= cast(null as varchar(70)),
	GC_SRV_DATE			= cast(null as DateTime),
	SUP_USEVAT =	cast(null as int),
	GOODS_CODE = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    GOODS_NAME = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(254))

FROM ACT_DEDUCTION_ITEM		ADI	(NOLOCK)
JOIN ACT_DEDUCTION			AD	(NOLOCK) ON AD.ID_ACT_DEDUCTION_GLOBAL = ADI.ID_ACT_DEDUCTION_GLOBAL
LEFT JOIN DEDUCTION_REASON	DR	(NOLOCK) ON DR.ID_DEDUCTION_REASON = AD.ID_DEDUCTION_REASON
LEFT JOIN LOT				L	(NOLOCK) ON L.ID_LOT_GLOBAL = ADI.ID_LOT_GLOBAL
LEFT JOIN STORE				S	(NOLOCK) ON S.ID_STORE = AD.ID_STORE
LEFT JOIN CONTRACTOR		AU	(NOLOCK) ON AU.ID_CONTRACTOR = S.ID_CONTRACTOR
INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
WHERE 
    AD.DATE BETWEEN @DATE_FROM AND @DATE_TO
    AND (@ALL_STORE = 1 OR S.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP))
    AND (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 20))
    AND (@ALL_CONTRACTOR = 1 OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = S.ID_CONTRACTOR))
GROUP BY 
    CAST(AD.ID_ACT_DEDUCTION_GLOBAL AS VARCHAR(50)), 
    CAST(AD.MNEMOCODE AS VARCHAR(50)),
    CAST(AD.DATE AS DATETIME), 
    CAST(AU.CODE AS VARCHAR(40)),
    CAST(AU.NAME AS VARCHAR(200)),	
    CAST(S.ID_STORE_GLOBAL AS VARCHAR(40)), 
    CAST(S.NAME AS VARCHAR(100)),
    CASE AD.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    CASE AD.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    CAST(AD.COMMENT AS VARCHAR(254)),
    CAST(DR.ID_DEDUCTION_REASON_GLOBAL AS VARCHAR(40)), 
    CAST(DR.NAME AS VARCHAR(50)), 
    CAST(AD.ORDER_NUMBER AS VARCHAR(50)), 
    CAST(ORDER_DATE AS DATETIME),
	CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(256)),
    CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    CAST(L.VAT_SAL AS DECIMAL(18, 2))



	
-- -- -- -------------------------------------------------------------------------------------------
-- -- -- -- –¿—’ŒƒÕ¿ﬂ Õ¿ À¿ƒÕ¿ﬂ
-- -- -- -------------------------------------------------------------------------------------------
IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 21))
INSERT INTO @RESULT_TAB
SELECT
    OPER_CODE		= 'INVOICE_OUT', 
    DOC_ID			= CAST(I.ID_INVOICE_OUT_GLOBAL AS VARCHAR(50)), 
    DOC_NUM			= CAST(I.MNEMOCODE AS VARCHAR(50)),
    DOC_DATE		= CAST(I.DATE AS DATETIME), 
    AU_CODE			= CAST(AU.CODE AS VARCHAR(40)),
    AU_NAME			= CAST(AU.NAME AS VARCHAR(200)),
    AU_TO_CODE		= CAST(NULL AS VARCHAR(40)),	
    AU_TO_NAME		= CAST(NULL AS VARCHAR(200)),	
    STORE_ID		= CAST(S.ID_STORE_GLOBAL AS VARCHAR(40)), 
    STORE_NM		= CAST(S.NAME AS VARCHAR(100)),
    STORE_TO_I		= CAST(NULL AS VARCHAR(40)), 
    STORE_TO_N		= CAST(NULL AS VARCHAR(100)),
    CONTR_ID		= CAST(P.CODE AS VARCHAR(40)), 
    CONTR_NM		= CAST(P.NAME AS VARCHAR(200)),
    CONTR_INN		= CAST(P.INN AS VARCHAR(40)),
    CONTR_KPP		= CAST(P.KPP AS VARCHAR(10)),
    CON_CODE		= CAST(CON.CONTRACTOR_CODE AS VARCHAR(100)),
    CON_NAME		= CAST(CON.NAME AS VARCHAR(150)),
    [PROC]			= CASE I.[STATE] WHEN 'PROC' THEN 1 ELSE 0 END,
    DEL				= CASE I.[STATE] WHEN 'DEL' THEN 1 ELSE 0 END,
    COMMENT			= CAST(ISNULL(I.COMMENT,'') AS VARCHAR(254)),
    DOC_INNUM		= CAST(NULL AS VARCHAR(40)), 
    DOC_IN_DAT		= CAST(NULL AS DATETIME),
    TYPE_PAY		= CAST(NULL AS VARCHAR(5)), 
    DED_TYPE_ID		= CAST(NULL AS VARCHAR(40)), 
    DED_TYPE_NM		= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_ID		= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_NUM	= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_DATE	= CAST(NULL AS DATETIME),
    CORRECT_SF_TYPE	= CAST(NULL AS INT),
	QUANTITY		= CAST(SUM(II.QUANTITY) AS DECIMAL(18, 2)),
    NDS_RATE		= CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    NDS_RATE_R		= CAST(L.VAT_SAL AS DECIMAL(18, 2)),
    OPT_YNDS		= CAST(SUM(L.PRICE_SUP * II.QUANTITY + case when s.ID_STORE_TYPE_GLOBAL = @ID_STORE_TYPE_PRODUCED_OPTICS then l.PRICE_PROD else 0.0 end) AS DECIMAL(18, 2)), 
    OPT_NDS			= CAST(SUM(L.PVAT_SUP * II.QUANTITY) AS DECIMAL(18, 2)),
    RET_YNDS		= CAST(SUM(L.PRICE_SAL * II.QUANTITY) AS DECIMAL(18, 2)), 
    RET_NDS			= CAST(SUM(L.PVAT_SAL * II.QUANTITY) AS DECIMAL(18, 2)),
    RET_DISC		= CAST(NULL AS DECIMAL(18, 2)),
	EMP_CLOS		= CAST(NULL AS VARCHAR(100)),
	BILL_NUM		= CAST(NULL AS VARCHAR(50)),
	BILL_DT			= CAST(NULL AS DATETIME),
	GC_CONTR_ID		= cast(gcc.CODE as varchar(40)),
	GC_CONTR		= cast(gcc.NAME as varchar(200)),
	GC_NUMBER		= cast(gc.CODE as varchar(100)),
	GC_DATE			= cast(gc.DATE as DateTime),
	GC_SRV_NUMBER	= cast(NULL/*gcs.NUMBER*/ as varchar(70)),
	GC_SRV_DATE		= cast(NULL/*gcs.DATE_BEGIN*/ as DateTime),
	SUP_USEVAT		= cast(P.USE_VAT as int),
	GOODS_CODE = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    GOODS_NAME = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(254))

FROM INVOICE_OUT_ITEM					II	(NOLOCK)
JOIN INVOICE_OUT						I	(NOLOCK) ON I.ID_INVOICE_OUT_GLOBAL = II.ID_INVOICE_OUT_GLOBAL
LEFT JOIN LOT							L	(NOLOCK) ON L.ID_LOT_GLOBAL = II.ID_LOT_GLOBAL
LEFT JOIN STORE							S	(NOLOCK) ON S.ID_STORE = I.ID_STORE
LEFT JOIN CONTRACTOR					AU	(NOLOCK) ON AU.ID_CONTRACTOR = S.ID_CONTRACTOR
LEFT JOIN CONTRACTOR					P	(NOLOCK) ON P.ID_CONTRACTOR = I.ID_CONTRACTOR_TO
LEFT JOIN CONTRACTS						CON	(NOLOCK) ON CON.ID_CONTRACTS_GLOBAL = I.ID_CONTRACTS_GLOBAL
left join GOS_CONTRACT_GOODS			gcg	(NOLOCK) on gcg.ID_GOS_CONTRACT_GOODS = l.ID_GOS_CONTRACT_GOODS
left join GOS_CONTRACT					gc	(NOLOCK) on gc.ID_GOS_CONTRACT = gcg.ID_GOS_CONTRACT
--left join GOS_CONTRACT_GOODS_2_SERVICE	g2s	(NOLOCK) on G2S.ID_GOS_CONTRACT_GOODS_GLOBAL = L.ID_GOS_CONTRACT_GOODS
--left join GOS_CONTRACT_SERVICE			gcs	(NOLOCK) on g2s.ID_GOS_CONTRACT_SERVICE_GLOBAL = gcs.ID_GOS_CONTRACT_SERVICE_GLOBAL
left join CONTRACTOR					gcc	(NOLOCK) on gc.ID_CONTRACTOR = GCC.ID_CONTRACTOR
INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
WHERE 
    I.DATE BETWEEN @DATE_FROM AND @DATE_TO
    AND (@ALL_STORE = 1 OR S.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP))
    AND (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 21))
    AND (@ALL_CONTRACTOR = 1 OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = S.ID_CONTRACTOR))
GROUP BY 
    CAST(I.ID_INVOICE_OUT_GLOBAL AS VARCHAR(50)), 
    CAST(I.MNEMOCODE AS VARCHAR(50)),
    CAST(I.DATE AS DATETIME), 
    CAST(AU.CODE AS VARCHAR(40)),
    CAST(AU.NAME AS VARCHAR(200)),	
    CAST(S.ID_STORE_GLOBAL AS VARCHAR(40)), 
    CAST(S.NAME AS VARCHAR(100)),
    CAST(P.CODE AS VARCHAR(40)), 
    CAST(P.NAME AS VARCHAR(200)),
    CAST(P.INN AS VARCHAR(40)),
    CAST(P.KPP AS VARCHAR(10)),
    CAST(CON.CONTRACTOR_CODE AS VARCHAR(100)),
    CAST(CON.NAME AS VARCHAR(150)),
    CASE I.[STATE] WHEN 'PROC' THEN 1 ELSE 0 END,
    CASE I.[STATE] WHEN 'DEL' THEN 1 ELSE 0 END,
    CAST(ISNULL(I.COMMENT,'') AS VARCHAR(254)),
    CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    CAST(L.VAT_SAL AS DECIMAL(18, 2)),
	cast(gcc.CODE as varchar(40)),
	cast(gcc.NAME as varchar(200)),
	cast(gc.CODE as varchar(100)),
	cast(gc.DATE as DateTime),
--	cast(gcs.NUMBER as varchar(70)),
--	cast(gcs.DATE_BEGIN as DateTime),
	cast(P.USE_VAT as int),
	CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(256))
	
	
	
-- -- -------------------------------------------------------------------------------------------
-- -- -- œ≈–≈Ã≈Ÿ≈Õ»≈ Ã≈∆ƒ” œŒƒ–¿«ƒ≈À≈Õ»ﬂÃ»
-- -- -------------------------------------------------------------------------------------------
IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 37))
INSERT INTO @RESULT_TAB
SELECT
    OPER_CODE		= 'INTERFIRM_MOVING', 
    DOC_ID			= CAST(M.ID_INTERFIRM_MOVING_GLOBAL AS VARCHAR(50)), 
    DOC_NUM			= CAST(M.MNEMOCODE AS VARCHAR(50)),
    DOC_DATE		= CAST(M.DATE AS DATETIME), 
    AU_CODE			= CAST(AU.CODE AS VARCHAR(40)),
    AU_NAME			= CAST(AU.NAME AS VARCHAR(200)),
    AU_TO_CODE		= CAST(AU_TO.CODE AS VARCHAR(40)),	
    AU_TO_NAME		= CAST(AU_TO.NAME AS VARCHAR(200)),	
    STORE_ID		= CAST(MAIN_FR.ID_STORE_GLOBAL AS VARCHAR(40)),
    STORE_NM		= CAST(MAIN_FR.NAME AS VARCHAR(100)),
    STORE_TO_I		= CAST(MAIN_TO.ID_STORE_GLOBAL AS VARCHAR(40)),
    STORE_TO_N		= CAST(MAIN_TO.NAME AS VARCHAR(100)),
    CONTR_ID		= CAST(NULL AS VARCHAR(40)), 
    CONTR_NM		= CAST(NULL AS VARCHAR(200)),
    CONTR_INN		= CAST(NULL AS VARCHAR(40)),
    CONTR_KPP		= CAST(NULL AS VARCHAR(10)),
    CON_CODE		= CAST(NULL AS VARCHAR(100)),
    CON_NAME		= CAST(NULL AS VARCHAR(150)),
    [PROC]			= CASE M.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    DEL				= CASE M.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    COMMENT			= CAST(M.COMMENT AS VARCHAR(254)),
    DOC_INNUM		= CAST(NULL AS VARCHAR(40)), 
    DOC_IN_DAT		= CAST(NULL AS DATETIME),
    TYPE_PAY		= CAST(NULL AS VARCHAR(5)), 
    DED_TYPE_ID		= CAST(NULL AS VARCHAR(40)), 
    DED_TYPE_NM		= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_ID		= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_NUM	= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_DATE	= CAST(NULL AS DATETIME),
    CORRECT_SF_TYPE	= CAST(NULL AS INT),
	QUANTITY		= CAST(SUM(MI.QUANTITY) AS DECIMAL(18, 2)),
    NDS_RATE		= CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    NDS_RATE_R		= CAST(L.VAT_SAL AS DECIMAL(18, 2)),
    OPT_YNDS		= CAST(SUM(L.PRICE_SUP * MI.QUANTITY + case when MAIN_FR.ID_STORE_TYPE_GLOBAL = @ID_STORE_TYPE_PRODUCED_OPTICS then l.PRICE_PROD else 0.0 end) AS DECIMAL(18, 2)), 
    OPT_NDS			= CAST(SUM(L.PVAT_SUP * MI.QUANTITY) AS DECIMAL(18, 2)),
    RET_YNDS		= CAST(SUM(L.PRICE_SAL * MI.QUANTITY) AS DECIMAL(18, 2)), 
    RET_NDS			= CAST(SUM(L.PVAT_SAL * MI.QUANTITY) AS DECIMAL(18, 2)),
    RET_DISC		= CAST(NULL AS DECIMAL(18, 2)),
	EMP_CLOS		= CAST(NULL AS VARCHAR(100)),
	BILL_NUM		= CAST(NULL AS VARCHAR(50)),
	BILL_DT			= CAST(NULL AS DATETIME),
	GC_CONTR_ID		= cast(null as varchar(40)),
	GC_CONTR		= cast(null as varchar(200)),
	GC_NUMBER		= cast(null as varchar(100)),
	GC_DATE			= cast(null as DateTime),
	GC_SRV_NUMBER	= cast(null as varchar(70)),
	GC_SRV_DATE		= cast(null as DateTime),
	SUP_USEVAT		= cast(null as int),
	
	GOODS_CODE = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    GOODS_NAME = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(254))
FROM INTERFIRM_MOVING_ITEM	MI		(NOLOCK)
JOIN INTERFIRM_MOVING		M		(NOLOCK) ON M.ID_INTERFIRM_MOVING_GLOBAL = MI.ID_INTERFIRM_MOVING_GLOBAL
LEFT JOIN LOT				L		(NOLOCK) ON L.ID_LOT = MI.ID_LOT_FROM
LEFT JOIN STORE				MAIN_FR	(NOLOCK) ON MAIN_FR.ID_STORE = M.ID_STORE_FROM_MAIN
LEFT JOIN STORE				MAIN_TO	(NOLOCK) ON MAIN_TO.ID_STORE = M.ID_STORE_TO_MAIN
LEFT JOIN CONTRACTOR		AU		(NOLOCK) ON AU.ID_CONTRACTOR = MAIN_FR.ID_CONTRACTOR
LEFT JOIN CONTRACTOR		AU_TO	(NOLOCK) ON ((AU_TO.ID_CONTRACTOR = MAIN_TO.ID_CONTRACTOR AND M.ID_CONTRACTOR_TO is NULL) or (AU_TO.ID_CONTRACTOR = M.ID_CONTRACTOR_TO AND M.ID_CONTRACTOR_TO is not NULL))
INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
WHERE 
    M.DATE BETWEEN @DATE_FROM AND @DATE_TO
    AND (@ALL_STORE = 1 
			OR MAIN_FR.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP) 
			OR MAIN_TO.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP)
		)
    AND (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 37))
    AND (@ALL_CONTRACTOR = 1 
			OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = MAIN_FR.ID_CONTRACTOR)
			OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = MAIN_TO.ID_CONTRACTOR)
		)
GROUP BY 
    CAST(M.ID_INTERFIRM_MOVING_GLOBAL AS VARCHAR(50)), 
    CAST(M.MNEMOCODE AS VARCHAR(50)),
    CAST(M.DATE AS DATETIME), 
    CAST(AU.CODE AS VARCHAR(40)),
    CAST(AU.NAME AS VARCHAR(200)),
    CAST(AU_TO.CODE AS VARCHAR(40)),	
    CAST(AU_TO.NAME AS VARCHAR(200)),	
    CAST(MAIN_FR.ID_STORE_GLOBAL AS VARCHAR(40)), 
    CAST(MAIN_FR.NAME AS VARCHAR(100)),
	CAST(MAIN_TO.ID_STORE_GLOBAL AS VARCHAR(40)),
	CAST(MAIN_TO.NAME AS VARCHAR(100)),
    CASE M.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    CASE M.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    CAST(M.COMMENT AS VARCHAR(254)),
	CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(256)),
    CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    CAST(L.VAT_SAL AS DECIMAL(18, 2))

	
-- -- -------------------------------------------------------------------------------------------
-- -- -- ¿ “ œ–»®Ã » œŒ œ≈–≈Ã≈Ÿ®Õ»ﬁ - Œ“œ–¿¬»“≈À»
-- -- -------------------------------------------------------------------------------------------
IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 38))
INSERT INTO @RESULT_TAB
SELECT
    OPER_CODE		= 'INTERFIRM_MOVING_ACCEPTANCE_ACT', 
    DOC_ID			= CAST(M.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL AS VARCHAR(50)), 
    DOC_NUM			= CAST(M.MNEMOCODE AS VARCHAR(50)),
    DOC_DATE		= CAST(M.DATE AS DATETIME), 
    AU_CODE			= CAST(AU.CODE AS VARCHAR(40)),
    AU_NAME			= CAST(AU.NAME AS VARCHAR(200)),
    AU_TO_CODE		= CAST(AU_TO.CODE AS VARCHAR(40)),	
    AU_TO_NAME		= CAST(AU_TO.NAME AS VARCHAR(200)),	
    STORE_ID		= CAST(MAIN_FR.ID_STORE_GLOBAL AS VARCHAR(40)), 
    STORE_NM		= CAST(MAIN_FR.NAME AS VARCHAR(100)),
    STORE_TO_I		= CAST(MAIN_TO.ID_STORE_GLOBAL AS VARCHAR(40)), 
    STORE_TO_N		= CAST(MAIN_TO.NAME AS VARCHAR(100)),
    CONTR_ID		= CAST(NULL AS VARCHAR(40)), 
    CONTR_NM		= CAST(NULL AS VARCHAR(200)),
    CONTR_INN		= CAST(NULL AS VARCHAR(40)),
    CONTR_KPP		= CAST(NULL AS VARCHAR(10)),
    CON_CODE		= CAST(NULL AS VARCHAR(100)),
    CON_NAME		= CAST(NULL AS VARCHAR(150)),
    [PROC]			= CASE M.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    DEL				= CASE M.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    COMMENT			= CAST(M.COMMENT AS VARCHAR(254)),
    DOC_INNUM		= CAST(IFM.MNEMOCODE AS VARCHAR(40)), 
    DOC_IN_DAT		= CAST(IFM.DATE AS DATETIME),
    TYPE_PAY		= CAST(NULL AS VARCHAR(5)), 
    DED_TYPE_ID		= CAST(NULL AS VARCHAR(40)), 
    DED_TYPE_NM		= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_ID		= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_NUM	= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_DATE	= CAST(NULL AS DATETIME),
    CORRECT_SF_TYPE	= CAST(NULL AS INT),
	QUANTITY		= CAST(SUM(MI.QUANTITY) AS DECIMAL(18, 2)),
    NDS_RATE		= CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    NDS_RATE_R		= CAST(L.VAT_SAL AS DECIMAL(18, 2)),
    OPT_YNDS		= CAST(SUM(L.PRICE_SUP * MI.QUANTITY + case when MAIN_FR.ID_STORE_TYPE_GLOBAL = @ID_STORE_TYPE_PRODUCED_OPTICS then l.PRICE_PROD else 0.0 end) AS DECIMAL(18, 2)), 
    OPT_NDS			= CAST(SUM(L.PVAT_SUP * MI.QUANTITY) AS DECIMAL(18, 2)),
    RET_YNDS		= CAST(SUM(L.PRICE_SAL * MI.QUANTITY) AS DECIMAL(18, 2)), 
    RET_NDS			= CAST(SUM(L.PVAT_SAL * MI.QUANTITY) AS DECIMAL(18, 2)),
    RET_DISC		= CAST(NULL AS DECIMAL(18, 2)),
	EMP_CLOS		= CAST(NULL AS VARCHAR(100)),
	BILL_NUM		= CAST(NULL AS VARCHAR(50)),
	BILL_DT			= CAST(NULL AS DATETIME),
	GC_CONTR_ID		= cast(null as varchar(40)),
	GC_CONTR		= cast(null as varchar(200)),
	GC_NUMBER		= cast(null as varchar(100)),
	GC_DATE			= cast(null as DateTime),
	GC_SRV_NUMBER	= cast(null as varchar(70)),
	GC_SRV_DATE		= cast(null as DateTime),
	SUP_USEVAT		= cast(null as int),
	CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(256))

FROM INTERFIRM_MOVING_ACCEPTANCE_ACT_ITEM	MI		(NOLOCK)
JOIN INTERFIRM_MOVING_ACCEPTANCE_ACT		M		(NOLOCK) ON M.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL = MI.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL
JOIN INTERFIRM_MOVING						IFM		(NOLOCK) ON IFM.ID_INTERFIRM_MOVING_GLOBAL = M.ID_INTERFIRM_MOVING_GLOBAL
LEFT JOIN LOT								L		(NOLOCK) ON L.ID_LOT = MI.ID_LOT_FROM
LEFT JOIN STORE								MAIN_FR	(NOLOCK) ON MAIN_FR.ID_STORE = M.ID_STORE_FROM_MAIN
LEFT JOIN STORE								MAIN_TO	(NOLOCK) ON MAIN_TO.ID_STORE = M.ID_STORE_TO_MAIN
LEFT JOIN CONTRACTOR						AU		(NOLOCK) ON AU.ID_CONTRACTOR = MAIN_FR.ID_CONTRACTOR
LEFT JOIN CONTRACTOR						AU_TO	(NOLOCK) ON AU_TO.ID_CONTRACTOR = MAIN_TO.ID_CONTRACTOR
INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
WHERE 
    M.DATE BETWEEN @DATE_FROM AND @DATE_TO
    AND (@ALL_STORE = 1 
		OR MAIN_FR.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP)
		OR MAIN_TO.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP)
	)
    AND (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 38))
    AND (@ALL_CONTRACTOR = 1 
		OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = MAIN_FR.ID_CONTRACTOR)
		OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = MAIN_TO.ID_CONTRACTOR)
	)
GROUP BY
	CAST(M.ID_INTERFIRM_MOVING_ACCEPTANCE_ACT_GLOBAL AS VARCHAR(50)),
    CAST(M.MNEMOCODE AS VARCHAR(50)),
    CAST(M.DATE AS DATETIME),
    CAST(AU.CODE AS VARCHAR(40)),
    CAST(AU.NAME AS VARCHAR(200)),
    CAST(AU_TO.CODE AS VARCHAR(40)),	
    CAST(AU_TO.NAME AS VARCHAR(200)),
	CAST(MAIN_FR.ID_STORE_GLOBAL AS VARCHAR(40)), 
	CAST(MAIN_FR.NAME AS VARCHAR(100)),
    CAST(MAIN_TO.ID_STORE_GLOBAL AS VARCHAR(40)),
    CAST(MAIN_TO.NAME AS VARCHAR(100)),
    CASE M.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    CASE M.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    CAST(M.COMMENT AS VARCHAR(254)),
    CAST(IFM.MNEMOCODE AS VARCHAR(40)),
    CAST(IFM.DATE AS DATETIME),
    CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    CAST(L.VAT_SAL AS DECIMAL(18, 2)),
	CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(256))




	
-- -- -------------------------------------------------------------------------------------------
-- -- -- ¿ “ Œ“ ¿«¿ œŒ œ≈–≈Ã≈Ÿ≈Õ»ﬁ - Œ“œ–¿¬»“≈À»
-- -- -------------------------------------------------------------------------------------------
IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 39))
INSERT INTO @RESULT_TAB
SELECT
    OPER_CODE		= 'INTERFIRM_MOVING_REFUSAL_ACT', 
    DOC_ID			= CAST(M.ID_INTERFIRM_MOVING_REFUSAL_ACT_GLOBAL AS VARCHAR(50)), 
    DOC_NUM			= CAST(M.MNEMOCODE AS VARCHAR(50)),
    DOC_DATE		= CAST(M.DATE AS DATETIME), 
    AU_CODE			= CAST(AU.CODE AS VARCHAR(40)),
    AU_NAME			= CAST(AU.NAME AS VARCHAR(200)),
    AU_TO_CODE		= CAST(AU_TO.CODE AS VARCHAR(40)),	
    AU_TO_NAME		= CAST(AU_TO.NAME AS VARCHAR(200)),	
    STORE_ID		= CAST(MAIN_FR.ID_STORE_GLOBAL AS VARCHAR(40)), 
    STORE_NM		= CAST(MAIN_FR.NAME AS VARCHAR(100)),
    STORE_TO_I		= CAST(MAIN_TO.ID_STORE_GLOBAL AS VARCHAR(40)), 
    STORE_TO_N		= CAST(MAIN_TO.NAME AS VARCHAR(100)),
    CONTR_ID		= CAST(NULL AS VARCHAR(40)), 
    CONTR_NM		= CAST(NULL AS VARCHAR(200)),
    CONTR_INN		= CAST(NULL AS VARCHAR(40)),
    CONTR_KPP		= CAST(NULL AS VARCHAR(10)),
    CON_CODE		= CAST(NULL AS VARCHAR(100)),
    CON_NAME		= CAST(NULL AS VARCHAR(150)),
    [PROC]			= CASE M.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    DEL				= CASE M.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    COMMENT			= CAST(M.COMMENT AS VARCHAR(254)),
    DOC_INNUM		= CAST(IFM.MNEMOCODE AS VARCHAR(40)), 
    DOC_IN_DAT		= CAST(IFM.DATE AS DATETIME),
    TYPE_PAY		= CAST(NULL AS VARCHAR(5)), 
    DED_TYPE_ID		= CAST(NULL AS VARCHAR(40)), 
    DED_TYPE_NM		= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_ID		= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_NUM	= CAST(NULL AS VARCHAR(50)), 
    BASE_DOC_DATE	= CAST(NULL AS DATETIME),
    CORRECT_SF_TYPE	= CAST(NULL AS INT),
	QUANTITY		= CAST(SUM(MI.QUANTITY) AS DECIMAL(18, 2)),
    NDS_RATE		= CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    NDS_RATE_R		= CAST(L.VAT_SAL AS DECIMAL(18, 2)),
    OPT_YNDS		= CAST(SUM(L.PRICE_SUP * MI.QUANTITY + case when MAIN_FR.ID_STORE_TYPE_GLOBAL = @ID_STORE_TYPE_PRODUCED_OPTICS then l.PRICE_PROD else 0.0 end) AS DECIMAL(18, 2)), 
    OPT_NDS			= CAST(SUM(L.PVAT_SUP * MI.QUANTITY) AS DECIMAL(18, 2)),
    RET_YNDS		= CAST(SUM(L.PRICE_SAL * MI.QUANTITY) AS DECIMAL(18, 2)), 
    RET_NDS			= CAST(SUM(L.PVAT_SAL * MI.QUANTITY) AS DECIMAL(18, 2)),
    RET_DISC		= CAST(NULL AS DECIMAL(18, 2)),
	EMP_CLOS		= CAST(NULL AS VARCHAR(100)),
	BILL_NUM		= CAST(NULL AS VARCHAR(50)),
	BILL_DT			= CAST(NULL AS DATETIME),
	GC_CONTR_ID		= cast(null as varchar(40)),
	GC_CONTR		= cast(null as varchar(200)),
	GC_NUMBER		= cast(null as varchar(100)),
	GC_DATE			= cast(null as DateTime),
	GC_SRV_NUMBER	= cast(null as varchar(70)),
	GC_SRV_DATE		= cast(null as DateTime),
	SUP_USEVAT		= cast(null as int),
	GOODS_CODE = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    GOODS_NAME = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(254))

FROM INTERFIRM_MOVING_REFUSAL_ACT_ITEM	MI		(NOLOCK)
JOIN INTERFIRM_MOVING_REFUSAL_ACT		M		(NOLOCK) ON M.ID_INTERFIRM_MOVING_REFUSAL_ACT_GLOBAL = MI.ID_INTERFIRM_MOVING_REFUSAL_ACT_GLOBAL
JOIN INTERFIRM_MOVING					IFM		(NOLOCK) ON IFM.ID_INTERFIRM_MOVING_GLOBAL = M.ID_INTERFIRM_MOVING_GLOBAL
LEFT JOIN LOT							L		(NOLOCK) ON L.ID_LOT = MI.ID_LOT_FROM
LEFT JOIN STORE							MAIN_FR	(NOLOCK) ON MAIN_FR.ID_STORE = M.ID_STORE_FROM_MAIN
LEFT JOIN STORE							MAIN_TO	(NOLOCK) ON MAIN_TO.ID_STORE = M.ID_STORE_TO_MAIN
LEFT JOIN CONTRACTOR					AU		(NOLOCK) ON AU.ID_CONTRACTOR = MAIN_FR.ID_CONTRACTOR
LEFT JOIN CONTRACTOR					AU_TO	(NOLOCK) ON AU_TO.ID_CONTRACTOR = IsNull(MAIN_TO.ID_CONTRACTOR, M.ID_CONTRACTOR_TO)
INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
WHERE 
    M.DATE BETWEEN @DATE_FROM AND @DATE_TO
    AND (@ALL_STORE = 1 
		OR MAIN_FR.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP)
		OR MAIN_TO.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP)
	)
    AND (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 39))
    AND (@ALL_CONTRACTOR = 1
		OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = MAIN_FR.ID_CONTRACTOR)
		OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = MAIN_TO.ID_CONTRACTOR)
	)
GROUP BY 
    CAST(M.ID_INTERFIRM_MOVING_REFUSAL_ACT_GLOBAL AS VARCHAR(50)), 
    CAST(M.MNEMOCODE AS VARCHAR(50)),
    CAST(M.DATE AS DATETIME), 
    CAST(AU.CODE AS VARCHAR(40)),
    CAST(AU.NAME AS VARCHAR(200)),
    CAST(AU_TO.CODE AS VARCHAR(40)),
    CAST(AU_TO.NAME AS VARCHAR(200)),	
	CAST(MAIN_FR.ID_STORE_GLOBAL AS VARCHAR(40)), 
	CAST(MAIN_FR.NAME AS VARCHAR(100)),
    CAST(MAIN_TO.ID_STORE_GLOBAL AS VARCHAR(40)),
    CAST(MAIN_TO.NAME AS VARCHAR(100)),
    CASE M.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    CASE M.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
    CAST(M.COMMENT AS VARCHAR(254)),
    CAST(IFM.MNEMOCODE AS VARCHAR(40)), 
    CAST(IFM.DATE AS DATETIME),
	
CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(256)),
    CAST(L.VAT_SUP AS DECIMAL(18, 2)),
    CAST(L.VAT_SAL AS DECIMAL(18, 2))
    


-- -- -------------------------------------------------------------------------------------------
-- -- -- ¿ “ ¬Œ«¬–¿“¿ Œ“ œŒ ”œ¿“≈Àﬂ
-- -- -------------------------------------------------------------------------------------------
IF (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 12))
INSERT INTO @RESULT_TAB
SELECT
	OPER_CODE			= 'ACT_RETURN_TO_BUYER', 
	DOC_ID				= CAST(AB.ID_ACT_RETURN_TO_BUYER_GLOBAL AS VARCHAR(50)), 
	DOC_NUM				= CAST(AB.MNEMOCODE AS VARCHAR(50)),
	DOC_DATE			= CAST(AB.DATE AS DATETIME),
	AU_CODE				= CAST(NULL AS VARCHAR(40)),
	AU_NAME				= CAST(NULL AS VARCHAR(200)),
	AU_TO_CODE			= CAST(NULL AS VARCHAR(40)), 
	AU_TO_NAME			= CAST(NULL AS VARCHAR(200)), 
    STORE_ID			= CAST(S.ID_STORE AS VARCHAR(40)),
    STORE_NM			= CAST(S.NAME AS VARCHAR(100)),
    STORE_TO_I			= CAST(NULL AS VARCHAR(40)), 
	STORE_TO_N			= CAST(NULL AS VARCHAR(100)),
    CONTR_ID			= CAST(C_FROM.ID_CONTRACTOR AS VARCHAR(40)), 
    CONTR_NM			= CAST(C_FROM.NAME AS VARCHAR(200)),    
    CONTR_INN			= CAST(C_FROM.INN AS VARCHAR(40)),   
	CONTR_KPP			= CAST(NULL AS VARCHAR(10)),
    CON_CODE			= CAST(CON.CONTRACTOR_CODE AS VARCHAR(100)),
    CON_NAME			= CAST(CON.NAME AS VARCHAR(150)),
    [PROC]				= CASE AB.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    [DEL]				= CASE AB.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
	COMMENT				= CAST(AB.COMMENT AS VARCHAR(254)),
	DOC_INNUM			= CAST(NULL AS VARCHAR(40)), 
	DOC_IN_DAT			= CAST(NULL AS DATETIME),
	TYPE_PAY			= CAST(NULL AS VARCHAR(5)), 
	DED_TYPE_ID			= CAST(NULL AS VARCHAR(40)),
	DED_TYPE_NM			= CAST(NULL AS VARCHAR(50)),
	BASE_DOC_ID			= CAST(NULL AS VARCHAR(50)),
	BASE_DOC_NUM		= CAST(NULL AS VARCHAR(50)),
	BASE_DOC_DATE		= CAST(NULL AS DATETIME), 
	CORRECT_SF_TYPE		= CAST(NULL AS INT), 
	QUANTITY			= CAST(SUM(ABI.QUANTITY) AS DECIMAL(18, 2)),
    NDS_RATE			= CAST(L.VAT_SUP AS DECIMAL(18,2)),
    NDS_RATE_R			= CAST(L.VAT_SAL AS DECIMAL(18,2)),   
    OPT_YNDS			= CAST(SUM(L.PRICE_SUP * ABI.QUANTITY) AS DECIMAL(18,2)), 
	OPT_NDS				= CAST(SUM(L.PVAT_SUP * ABI.QUANTITY) AS DECIMAL(18,2)),
    RET_YNDS			= CAST(SUM(ABI.SUM_SAL) AS DECIMAL(18,2)), 
    RET_NDS				= CAST(SUM(ABI.SVAT_SAL) AS DECIMAL(18,2)),
    RET_DISC			= CAST(SUM(L.PRICE_SAL-ABI.PRICE_PER_UNIT) AS DECIMAL(18,2)),
	EMP_CLOS			= CAST(NULL AS VARCHAR(100)), 
	BILL_NUM			= CAST(NULL AS VARCHAR(50)), 
	BILL_DT				= CAST(NULL AS DATETIME), 
	GC_CONTR_ID			= CAST(NULL AS VARCHAR(40)),
	GC_CONTR			= CAST(NULL AS VARCHAR(200)),
	GC_NUMBER			= CAST(NULL AS VARCHAR(100)),
	GC_DATE				= CAST(NULL AS DATETIME),
	GC_SRV_NUMBER		= CAST(NULL AS VARCHAR(70)),
	GC_SRV_DATE			= CAST(NULL AS DATETIME),
	SUP_USEVAT			= CAST(NULL AS INT),
	GOODS_CODE = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    GOODS_NAME = CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(254))

FROM  ACT_RETURN_TO_BUYER_ITEM ABI (NOLOCK)
INNER JOIN ACT_RETURN_TO_BUYER AB (NOLOCK) ON AB.ID_ACT_RETURN_TO_BUYER = ABI.ID_ACT_RETURN_TO_BUYER
LEFT JOIN LOT L	(NOLOCK) ON L.ID_LOT_GLOBAL = ABI.ID_LOT_GLOBAL OR L.ID_DOCUMENT_ITEM = ABI.ID_ACT_RETURN_TO_BUYER_ITEM_GLOBAL
LEFT JOIN STORE S (NOLOCK) ON S.ID_STORE = AB.ID_STORE_TO
LEFT JOIN CONTRACTOR C_FROM ON C_FROM.ID_CONTRACTOR = AB.ID_CONTRACTOR_FROM
LEFT JOIN CONTRACTS CON ON CON.ID_CONTRACTS_GLOBAL = AB.ID_CONTRACTS_GLOBAL
INNER JOIN GOODS G ON G.ID_GOODS = L.ID_GOODS
WHERE 
	AB.DATE BETWEEN @DATE_FROM AND @DATE_TO
	AND (@ALL_STORE = 1 OR S.ID_STORE IN (SELECT TMP.ID_STORE FROM #STORE TMP))
	AND (@ALL_DOC = 1 OR EXISTS(SELECT TOP 1 1 FROM #TABLE_DATA WHERE ID_TABLE_DATA = 12))
	AND (@ALL_CONTRACTOR = 1 OR EXISTS(SELECT 1 FROM #CONTRACTOR tc WHERE tc.ID_CONTRACTOR = S.ID_CONTRACTOR))
GROUP BY 
	CAST(AB.ID_ACT_RETURN_TO_BUYER_GLOBAL AS VARCHAR(50)), 
	CAST(AB.MNEMOCODE AS VARCHAR(50)),
	CAST(AB.DATE AS DATETIME),
	CAST(S.ID_STORE AS VARCHAR(40)),
    CAST(S.NAME AS VARCHAR(100)),
    CAST(C_FROM.ID_CONTRACTOR AS VARCHAR(40)), 
    CAST(C_FROM.NAME AS VARCHAR(200)),    
    CAST(C_FROM.INN AS VARCHAR(40)),   
	CAST(CON.CONTRACTOR_CODE AS VARCHAR(100)),
    CAST(CON.NAME AS VARCHAR(150)),
    CASE AB.DOCUMENT_STATE WHEN 'PROC' THEN 1 ELSE 0 END,
    CASE AB.DOCUMENT_STATE WHEN 'DEL' THEN 1 ELSE 0 END,
	CAST(AB.COMMENT AS VARCHAR(254)),
	CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.ID_GOODS_GLOBAL ELSE NULL END) AS VARCHAR(38)),
    CAST((CASE WHEN @CODE_NAME_UNIT_GROUPS = 1 THEN G.NAME ELSE NULL END) AS VARCHAR(256)),
	CAST(L.VAT_SUP AS DECIMAL(18,2)),
    CAST(L.VAT_SAL AS DECIMAL(18,2))


	-- ÒÚ‡‚ËÏ ÓÚÏÂÚÍË ˜ÚÓ ÓÚ‰ÂÎ ÓÚÌÓÒËÚÒˇ Í ÛÒÌ
	


SELECT * FROM @STRUCTURE ORDER BY COL_ID


-- ˝ÚÓ ÍÓÒÚ˚Î¸ . ≈ÒÚ¸ Ó¯Ë·Í‡ ‚ „ÛÔÔËÓ‚ÍÂ ˜ÂÍÓ‚. ‰Û˛ÎËÛ˛ÚÒˇ ÔÓÁËˆËË ÂÒÎË ÂÒÚ¸ Ú‡ ÊÂ ÔÓÁËˆËˇ ‚ ÒÏÂÌÂ ÌÓ Ò ‰Û„ËÏ ÍÓ‰ÓÏ 
delete from @RESULT_TAB
where OPER_CODE= 'CHEQUE'
and GOODS_CODE not in (select GOODS.ID_GOODS_GLOBAL from CHEQUE_ITEM, GOODS where GOODS.ID_GOODS = CHEQUE_ITEM.ID_GOODS and CHEQUE_ITEM.ID_CHEQUE_GLOBAL = BASE_DOC_NUM)
-- ÍÓÌÂˆ ÍÓÒÚ˚Îˇ

select
    OPER_CODE,
    DOC_ID,
    DOC_NUM,
    DOC_DATE			= convert(varchar(19), DOC_DATE, 120),
    AU_CODE,
    AU_NAME,
    AU_TO_CODE,
    AU_TO_NAME,
    STORE_ID,
    STORE_NM,
    STORE_TO_I,
    STORE_TO_N,
    CONTR_ID,
    CONTR_NM,
    CONTR_INN,
    CONTR_KPP,
    CON_CODE,
    CON_NAME,
    [PROC],
    [DEL],
    COMMENT,
    DOC_INNUM,
    DOC_IN_DAT			= convert(varchar(19), DOC_IN_DAT, 120),
    TYPE_PAY,
    DED_TYPE_ID,
    DED_TYPE_NM,
    BASE_DOC_ID,
    BASE_DOC_NUM,
    BASE_DOC_DATE		= convert(varchar(19), BASE_DOC_DATE, 120),
    CORRECT_SF_TYPE,
    QUANTITY,
    NDS_RATE,
    NDS_RATE_R,
    OPT_YNDS,
    OPT_NDS,
    RET_YNDS,
    RET_NDS,
    RET_DISC,
	EMP_CLOS,
	BILL_NUM,
	BILL_DT				= convert(varchar(19), BILL_DT, 120),
	GC_CONTR_ID,
	GC_CONTR,
	GC_NUMBER,
	GC_DATE,
	GC_SRV_NUMBER,
	GC_SRV_DATE,
	-- ÔÓ‰ÒÚ‡‚ÎˇÂÏ ÓÚÏÂÚÍÛ Ó ÚÓÏ ˜ÚÓ ‚ 
	SUP_USEVAT = case
					when STORE_NM like '%Ï‡ÍËÓ‚Í‡%' and OPER_CODE ='CASH_SESSION' then 1
					else SUP_USEVAT
					end ,
GOODS_CODE ,
GOODS_NAME
from @RESULT_TAB
--where goods_name like '%ÏÓ˜ÂÔ%'
order by
	OPER_CODE,
	DOC_DATE,
	DOC_NUM,
	AU_CODE


RETURN 0
